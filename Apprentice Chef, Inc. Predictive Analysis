{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Predictive model using Logistic Regression and KNN, providing insights regarding to customers behavior to a food delivery app\n",
    "\n",
    "02/04/2020\n",
    "\n",
    "Fernando Cavina\n",
    "\n",
    "OBJECTIVES:\n",
    "\n",
    "this assignment aims to make predictions about consumers who have used the product \"Halfway There\", \n",
    "in which subscribed customers receive half a bottle of wine weekly.\n",
    "\n",
    "We will analyze the dataset, and develop a machine learning model, \n",
    "in order to predict which customers will subscribe to the service. \n",
    "\n",
    "\n",
    "Fact to consider:\n",
    "- The range of the price is from 10 to 23 dollars per meal;\n",
    "- The range of the price is from 7 to 25 dollars for wine, 1 to 3 for water and 1 to 5 for sparkling water;\n",
    "- There are different email response rates based on a customer's email domain group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# loading all necessary packages\n",
    "import pandas                  as pd                      # data science essentials\n",
    "import matplotlib.pyplot       as plt                     # essential graphical output\n",
    "import seaborn                 as sns                     # enhanced graphical output\n",
    "import gender_guesser.detector as gender\n",
    "import statsmodels.formula.api as smf                     # regression modeling\n",
    "from sklearn.model_selection   import train_test_split   \n",
    "from sklearn.linear_model      import LogisticRegression  # logistic regression\n",
    "from sklearn.linear_model      import Ridge\n",
    "from sklearn.linear_model      import Lasso\n",
    "from sklearn.linear_model      import ARDRegression\n",
    "from sklearn.neighbors         import KNeighborsClassifier# KNN for classification\n",
    "from sklearn.neighbors         import KNeighborsRegressor # KNN for Regression\n",
    "from sklearn.preprocessing     import StandardScaler      # standard scaler\n",
    "from sklearn.metrics           import roc_auc_score\n",
    "from sklearn.metrics           import confusion_matrix    # confusion matrix\n",
    "from sklearn.tree              import DecisionTreeClassifier# classification trees\n",
    "from sklearn.tree              import export_graphviz     # exports graphics\n",
    "from sklearn.externals.six     import StringIO            # saves objects in memory\n",
    "from IPython.display           import Image               # displays on frontend\n",
    "import pydotplus                                          # interprets dot objects\n",
    "\n",
    "from sklearn.model_selection   import GridSearchCV        # hyperparameter tuning\n",
    "from sklearn.metrics           import make_scorer         # customizable scorer"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <i> Analysis </i>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  <i> Exploratory Analysis </i>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>REVENUE</th>\n",
       "      <th>CROSS_SELL_SUCCESS</th>\n",
       "      <th>NAME</th>\n",
       "      <th>EMAIL</th>\n",
       "      <th>FIRST_NAME</th>\n",
       "      <th>FAMILY_NAME</th>\n",
       "      <th>TOTAL_MEALS_ORDERED</th>\n",
       "      <th>UNIQUE_MEALS_PURCH</th>\n",
       "      <th>CONTACTS_W_CUSTOMER_SERVICE</th>\n",
       "      <th>PRODUCT_CATEGORIES_VIEWED</th>\n",
       "      <th>AVG_TIME_PER_SITE_VISIT</th>\n",
       "      <th>MOBILE_NUMBER</th>\n",
       "      <th>CANCELLATIONS_BEFORE_NOON</th>\n",
       "      <th>CANCELLATIONS_AFTER_NOON</th>\n",
       "      <th>TASTES_AND_PREFERENCES</th>\n",
       "      <th>MOBILE_LOGINS</th>\n",
       "      <th>PC_LOGINS</th>\n",
       "      <th>WEEKLY_PLAN</th>\n",
       "      <th>EARLY_DELIVERIES</th>\n",
       "      <th>LATE_DELIVERIES</th>\n",
       "      <th>PACKAGE_LOCKER</th>\n",
       "      <th>REFRIGERATED_LOCKER</th>\n",
       "      <th>FOLLOWED_RECOMMENDATIONS_PCT</th>\n",
       "      <th>AVG_PREP_VID_TIME</th>\n",
       "      <th>LARGEST_ORDER_SIZE</th>\n",
       "      <th>MASTER_CLASSES_ATTENDED</th>\n",
       "      <th>MEDIAN_MEAL_RATING</th>\n",
       "      <th>AVG_CLICKS_PER_VISIT</th>\n",
       "      <th>TOTAL_PHOTOS_VIEWED</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>1880.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Addam Osgrey</td>\n",
       "      <td>addam.osgrey@passport.com</td>\n",
       "      <td>Addam</td>\n",
       "      <td>Osgrey</td>\n",
       "      <td>118</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>86.00</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>165.8</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>1495.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Aegon Blackfyre</td>\n",
       "      <td>aegon.blackfyre@jnj.com</td>\n",
       "      <td>Aegon</td>\n",
       "      <td>Blackfyre</td>\n",
       "      <td>44</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>125.60</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>150.5</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>2572.5</td>\n",
       "      <td>1</td>\n",
       "      <td>Aegon Frey (son of Aenys)</td>\n",
       "      <td>aegon.frey.(son.of.aenys)@gmail.com</td>\n",
       "      <td>Aegon</td>\n",
       "      <td>Frey</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>58.00</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>80</td>\n",
       "      <td>99.6</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>1647.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Aegon Targaryen (son of Rhaegar)</td>\n",
       "      <td>aegon.targaryen.(son.of.rhaegar)@ibm.com</td>\n",
       "      <td>Aegon</td>\n",
       "      <td>Targaryen</td>\n",
       "      <td>76</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>45.51</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>125.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>1923.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Aegon V Targaryen</td>\n",
       "      <td>aegon.v.targaryen@goldmansacs.com</td>\n",
       "      <td>Aegon</td>\n",
       "      <td>V Targaryen</td>\n",
       "      <td>65</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>106.00</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>135.3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1941</td>\n",
       "      <td>1515.0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yandry</td>\n",
       "      <td>yandry@yahoo.com</td>\n",
       "      <td>Yandry</td>\n",
       "      <td>Yandry</td>\n",
       "      <td>38</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>118.50</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>117.7</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1942</td>\n",
       "      <td>1432.0</td>\n",
       "      <td>0</td>\n",
       "      <td>Yorkel</td>\n",
       "      <td>yorkel@gmail.com</td>\n",
       "      <td>Yorkel</td>\n",
       "      <td>Yorkel</td>\n",
       "      <td>47</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>105.30</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>98.1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1943</td>\n",
       "      <td>623.0</td>\n",
       "      <td>0</td>\n",
       "      <td>Young Henly</td>\n",
       "      <td>young.henly@gmail.com</td>\n",
       "      <td>Young</td>\n",
       "      <td>Henly</td>\n",
       "      <td>14</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>90.81</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>86.4</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1944</td>\n",
       "      <td>899.0</td>\n",
       "      <td>0</td>\n",
       "      <td>Ysilla</td>\n",
       "      <td>ysilla@protonmail.com</td>\n",
       "      <td>Ysilla</td>\n",
       "      <td>Ysilla</td>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>97.22</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>52</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>86.9</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1945</td>\n",
       "      <td>1255.0</td>\n",
       "      <td>0</td>\n",
       "      <td>Ysilla Royce</td>\n",
       "      <td>ysilla.royce@hotmail.com</td>\n",
       "      <td>Ysilla</td>\n",
       "      <td>Royce</td>\n",
       "      <td>29</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>182.47</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>115.4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1946 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      REVENUE  CROSS_SELL_SUCCESS                              NAME                                     EMAIL FIRST_NAME  FAMILY_NAME  TOTAL_MEALS_ORDERED  UNIQUE_MEALS_PURCH  CONTACTS_W_CUSTOMER_SERVICE  PRODUCT_CATEGORIES_VIEWED  AVG_TIME_PER_SITE_VISIT  MOBILE_NUMBER  CANCELLATIONS_BEFORE_NOON  CANCELLATIONS_AFTER_NOON  TASTES_AND_PREFERENCES  MOBILE_LOGINS  PC_LOGINS  WEEKLY_PLAN  EARLY_DELIVERIES  LATE_DELIVERIES  PACKAGE_LOCKER  REFRIGERATED_LOCKER  FOLLOWED_RECOMMENDATIONS_PCT  AVG_PREP_VID_TIME  LARGEST_ORDER_SIZE  MASTER_CLASSES_ATTENDED  MEDIAN_MEAL_RATING  AVG_CLICKS_PER_VISIT  TOTAL_PHOTOS_VIEWED\n",
       "0      1880.0                   1                      Addam Osgrey                 addam.osgrey@passport.com      Addam       Osgrey                  118                   4                            7                          5                    86.00              1                          2                         1                       0              6          2            8                 0                2               1                    0                            90              165.8                   6                        1                   3                    11                    0\n",
       "1      1495.0                   1                   Aegon Blackfyre                   aegon.blackfyre@jnj.com      Aegon    Blackfyre                   44                   3                            6                          3                   125.60              1                          0                         1                       0              6          1            8                 0                4               1                    0                            90              150.5                   4                        1                   3                    13                   90\n",
       "2      2572.5                   1         Aegon Frey (son of Aenys)       aegon.frey.(son.of.aenys)@gmail.com      Aegon        Frey                    38                   1                            5                          3                    58.00              1                          5                         0                       1              6          2           14                 0                0               0                    0                            80               99.6                   3                        0                   3                    12                    0\n",
       "3      1647.0                   1  Aegon Targaryen (son of Rhaegar)  aegon.targaryen.(son.of.rhaegar)@ibm.com      Aegon   Targaryen                    76                   3                            8                         10                    45.51              0                          3                         0                       1              6          1           11                 5                4               0                    0                            90              125.0                   3                        0                   3                    13                    0\n",
       "4      1923.0                   1                 Aegon V Targaryen         aegon.v.targaryen@goldmansacs.com      Aegon  V Targaryen                   65                   3                            6                          9                   106.00              1                          1                         1                       0              6          2           12                 0                4               1                    0                            90              135.3                   3                        1                   3                    13                  253\n",
       "...       ...                 ...                               ...                                       ...        ...          ...                  ...                 ...                          ...                        ...                      ...            ...                        ...                       ...                     ...            ...        ...          ...               ...              ...             ...                  ...                           ...                ...                 ...                      ...                 ...                   ...                  ...\n",
       "1941   1515.0                   0                            Yandry                          yandry@yahoo.com     Yandry       Yandry                   38                   9                            6                          9                   118.50              1                          1                         0                       1              6          2            9                 4                3               0                    0                            20              117.7                   4                        0                   3                    12                   98\n",
       "1942   1432.0                   0                            Yorkel                          yorkel@gmail.com     Yorkel       Yorkel                   47                   8                            4                          8                   105.30              0                          0                         0                       1              5          3            6                 0                2               0                    0                            20               98.1                   3                        0                   3                    13                    0\n",
       "1943    623.0                   0                       Young Henly                     young.henly@gmail.com      Young        Henly                   14                   6                           11                          1                    90.81              1                          1                         0                       1              6          1           12                 0                1               0                    0                            30               86.4                   3                        1                   2                    18                    0\n",
       "1944    899.0                   0                            Ysilla                     ysilla@protonmail.com     Ysilla       Ysilla                   15                   4                           12                          6                    97.22              1                          0                         0                       0              6          2           52                 4                3               0                    0                            20               86.9                   1                        0                   2                    17                    0\n",
       "1945   1255.0                   0                      Ysilla Royce                  ysilla.royce@hotmail.com     Ysilla        Royce                   29                   2                            4                          2                   182.47              1                          0                         0                       1              7          2            0                 0                4               0                    0                            10              115.4                   5                        0                   2                    14                    0\n",
       "\n",
       "[1946 rows x 29 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# loading the file\n",
    "file = 'Apprentice_Chef_Dataset (1).xlsx'\n",
    "chef_data   = pd.read_excel(file)\n",
    "\n",
    "pd.set_option('display.max_rows', 500)\n",
    "pd.set_option('display.max_columns', 500)\n",
    "pd.set_option('display.width', 1000)\n",
    "\n",
    "chef_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Classifying emails"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Starting a list\n",
    "# Step 1: Splitting the mail\n",
    "\n",
    "# starting the list\n",
    "list_mail = []\n",
    "\n",
    "# looping the mail adresses\n",
    "for index, col in chef_data.iterrows():\n",
    "    \n",
    "    # splitting domain '@' for email\n",
    "     mail_split = chef_data.loc[index, 'EMAIL'].split(sep = '@')\n",
    "    \n",
    "    # append\n",
    "     list_mail.append(mail_split)\n",
    "    \n",
    "    \n",
    "    \n",
    "# converting to a datafram from a list\n",
    "df_mail = pd.DataFrame(list_mail)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Step 2: putting it together with original DataFrame\n",
    "# creating a new one as a safety feature\n",
    "chef_data = pd.read_excel('Apprentice_Chef_Dataset (1).xlsx')\n",
    "\n",
    "\n",
    "\n",
    "# renaming columns\n",
    "df_mail.columns = ['XXXXX' , 'EMAIL_DOMAIN']\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "# putting together personal_email_domain with friends DataFrame\n",
    "chef_data = pd.concat([chef_data, df_mail['EMAIL_DOMAIN']],\n",
    "                     axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "private     861\n",
       "business    696\n",
       "junk        389\n",
       "Name: DOMAIN_GROUP, dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Step 3: Splitting the domains of the emails\n",
    "# types of domains\n",
    "priv_domain   = ['@gmail.com', '@yahoo.com', '@protonmail.com']\n",
    "\n",
    "biz_domain  = ['@mmm.com', '@amex.com' '@apple.com',\n",
    "                     '@boeing.com', '@caterpillar.com', '@chevron.com', '@cisco.com', '@cocacola.com', \n",
    "                     '@disney.com', '@dupont.com', '@exxon.com', '@ge.org', '@goldmansacs.com', \n",
    "                     '@homedepot.com', '@ibm.com', '@intel.com', '@jnj.com', '@jpmorgan.com', \n",
    "                     '@mcdonalds.com', '@merck.com', '@microsoft.com', '@nike.com', \n",
    "                     '@pfizer.com', '@pg.com', '@travelers.com', '@unitedtech.com', '@unitedhealth.com', \n",
    "                     '@verizon.com', '@visa.com', '@walmart.com', '@apple.com', '@amex.com']\n",
    "\n",
    "trash_domain      = ['@me.com','@aol.com', '@hotmail.com', '@live.com', '@msn.com', '@passport.com']\n",
    "\n",
    "\n",
    "# creating an empty list to add the splitted mails in\n",
    "list_domain = []\n",
    "\n",
    "# looping in the domain to the list \n",
    "for domain in chef_data['EMAIL_DOMAIN']:\n",
    "        if   '@' + domain in priv_domain:\n",
    "             list_domain.append('private')\n",
    "            \n",
    "        elif '@' + domain in biz_domain:\n",
    "             list_domain.append('business')\n",
    "        \n",
    "        elif '@' + domain in trash_domain:\n",
    "             list_domain.append('junk')\n",
    "                \n",
    "        else:\n",
    "            print('Unknown')\n",
    "            \n",
    "# putting it together to the with original DataFrame            \n",
    "chef_data['DOMAIN_GROUP'] = pd.Series(list_domain)\n",
    "\n",
    "# checking results\n",
    "chef_data['DOMAIN_GROUP'].value_counts()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def text_split_feature(col, chef_data, sep=' ', new_col_name='number_of_names'):\n",
    "    \"\"\"\n",
    "Splits values in a string Series (as part of a DataFrame) and sums the number\n",
    "of resulting items. Automatically appends summed column to original DataFrame.\n",
    "\n",
    "PARAMETERS\n",
    "----------\n",
    "col          : column to split\n",
    "df           : DataFrame where column is located\n",
    "sep          : string sequence to split by, default ' '\n",
    "new_col_name : name of new column after summing split, default\n",
    "               'number_of_names'\n",
    "\"\"\"\n",
    "\n",
    "    chef_data[new_col_name] = 0\n",
    "\n",
    "\n",
    "    for index, val in chef_data.iterrows():\n",
    "        chef_data.loc[index, new_col_name] = len(chef_data.loc[index, col].split(sep = ' '))\n",
    "\n",
    "text_split_feature(col = 'NAME',\n",
    "                   chef_data  = chef_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Outlier Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "########################\n",
    "# Visual EDA (Histograms)\n",
    "########################\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (10, 8))\n",
    "plt.subplot(2, 2, 1)\n",
    "sns.distplot(chef_data['TOTAL_MEALS_ORDERED'],\n",
    "             bins  = 'fd',\n",
    "             color = 'g')\n",
    "plt.xlabel('Total Meals Ordered')\n",
    "\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 2)\n",
    "sns.distplot(chef_data['UNIQUE_MEALS_PURCH'],\n",
    "             bins  = 'fd',\n",
    "             color = 'y')\n",
    "plt.xlabel('Unique Meals Purchased')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 3)\n",
    "sns.distplot(chef_data['CONTACTS_W_CUSTOMER_SERVICE'],\n",
    "             bins  = 'fd',\n",
    "             kde   = True,\n",
    "             color = 'orange')\n",
    "plt.xlabel('#Contacts with CustService')\n",
    "\n",
    "########################\n",
    "plt.subplot(2, 2, 4)\n",
    "sns.distplot(chef_data['PRODUCT_CATEGORIES_VIEWED'],\n",
    "             bins  = 'fd',\n",
    "             kde   = False,\n",
    "             rug   = True,\n",
    "             color = 'r')\n",
    "plt.xlabel('Product Categories Viewed')\n",
    "plt.tight_layout()\n",
    "#plt.savefig('Assignment I Histograms 1 of 6.png')\n",
    "plt.show()\n",
    "\n",
    "########################\n",
    "########################\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (10, 8))\n",
    "plt.subplot(2, 2, 1)\n",
    "sns.distplot(chef_data['AVG_TIME_PER_SITE_VISIT'],\n",
    "             bins  = 'fd',\n",
    "             color = 'g')\n",
    "plt.xlabel('Avg Time per Site Visit')\n",
    "\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 2)\n",
    "sns.distplot(chef_data['CANCELLATIONS_BEFORE_NOON'],\n",
    "             bins  = 'fd',\n",
    "             color = 'y')\n",
    "plt.xlabel('Cancellations Before Noon')\n",
    "\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 3)\n",
    "sns.distplot(chef_data['CANCELLATIONS_AFTER_NOON'],\n",
    "             color = 'orange',\n",
    "             kde   = False)\n",
    "plt.xlabel('Cancellations After Noon')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 4)\n",
    "sns.distplot(chef_data['PC_LOGINS'],\n",
    "             bins  = 'fd',\n",
    "             kde   = False,\n",
    "             rug   = True,\n",
    "             color = 'r')\n",
    "plt.xlabel('#PC Logins')\n",
    "plt.tight_layout()\n",
    "#plt.savefig('Assignment I Histograms 2 of 6.png')\n",
    "plt.show()\n",
    "\n",
    "########################\n",
    "########################\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (10, 8))\n",
    "plt.subplot(2, 2, 1)\n",
    "sns.distplot(chef_data['MOBILE_LOGINS'],\n",
    "             bins  = 'fd',\n",
    "             color = 'y')\n",
    "plt.xlabel('#Mobile Logins')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 2)\n",
    "sns.distplot(chef_data['WEEKLY_PLAN'],\n",
    "             bins  = 'fd',\n",
    "             kde   = False,\n",
    "             rug   = True,\n",
    "             color = 'orange')\n",
    "plt.xlabel('Number of Weeks Subscribed')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 3)\n",
    "sns.distplot(chef_data['EARLY_DELIVERIES'],\n",
    "             bins  = 'fd',\n",
    "             kde   = False,\n",
    "             rug   = True,\n",
    "             color = 'r')\n",
    "plt.xlabel('Early Deliveries')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 4)\n",
    "sns.distplot(chef_data['LATE_DELIVERIES'],\n",
    "             bins  = 'fd',\n",
    "             color = 'g')\n",
    "plt.xlabel('Late Deliveries')\n",
    "plt.tight_layout()\n",
    "#plt.savefig('Assignment I Histograms 3 of 6.png')\n",
    "plt.show()\n",
    "\n",
    "########################\n",
    "########################\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (10, 8))\n",
    "plt.subplot(2, 2, 1)\n",
    "sns.distplot(chef_data['PACKAGE_LOCKER'],\n",
    "             bins  = 'fd',\n",
    "             color = 'y')\n",
    "plt.xlabel('Package Locker')\n",
    "\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 2)\n",
    "sns.distplot(chef_data['FOLLOWED_RECOMMENDATIONS_PCT'],\n",
    "             bins = 'fd',\n",
    "             kde  = False,\n",
    "             rug  = True,\n",
    "             color = 'r')\n",
    "plt.xlabel('Pct. of Recommendations Followed')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 3)\n",
    "sns.distplot(chef_data['AVG_PREP_VID_TIME'],\n",
    "             bins  = 'fd',\n",
    "             color = 'g')\n",
    "plt.xlabel('Avg Time Prep Video Watched (sec)')\n",
    "\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 4)\n",
    "sns.distplot(chef_data['REVENUE'],\n",
    "             bins  = 'fd',\n",
    "             kde   = True,\n",
    "             rug   = False,\n",
    "             color = 'r')\n",
    "plt.xlabel('Revenue')\n",
    "plt.xlim(-25, 6000)\n",
    "plt.tight_layout()\n",
    "#plt.savefig('Assignment I Histograms 4 of 6.png')\n",
    "plt.show()\n",
    "\n",
    "########################\n",
    "########################\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (10, 8))\n",
    "plt.subplot(2, 2, 1)\n",
    "sns.distplot(chef_data['LARGEST_ORDER_SIZE'],\n",
    "             bins  = 'fd',\n",
    "             kde   = False,\n",
    "             rug   = True,\n",
    "             color = 'r')\n",
    "plt.xlabel('Largest Order Size')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 2)\n",
    "sns.distplot(chef_data['MASTER_CLASSES_ATTENDED'],\n",
    "             bins  = 'fd',\n",
    "             kde   = False,\n",
    "             rug   = True,\n",
    "             color = 'r')\n",
    "plt.xlabel('# Master Classes Attended')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 3)\n",
    "sns.distplot(chef_data['MEDIAN_MEAL_RATING'],\n",
    "             bins = 'fd',\n",
    "             kde  = False,\n",
    "             rug  = True,\n",
    "             color = 'r')\n",
    "plt.xlabel('Median Meal Rating')\n",
    "\n",
    "########################\n",
    "\n",
    "plt.subplot(2, 2, 4)\n",
    "sns.distplot(chef_data['AVG_CLICKS_PER_VISIT'],\n",
    "             bins  = 'fd',\n",
    "             color = 'g')\n",
    "plt.xlabel('Avg Clicks per Visit')\n",
    "plt.tight_layout()\n",
    "#plt.savefig('Assignment I Histograms 5 of 6.png')\n",
    "plt.show()\n",
    "\n",
    "########################\n",
    "########################\n",
    "\n",
    "fig, ax = plt.subplots(figsize = (10, 8))\n",
    "plt.subplot(2, 2, 1)\n",
    "sns.distplot(chef_data['TOTAL_PHOTOS_VIEWED'],\n",
    "             bins  = 50,\n",
    "             kde   = True,\n",
    "             rug   = False,\n",
    "             color = 'r')\n",
    "plt.xlabel('Total Photos Viewed')\n",
    "\n",
    "plt.tight_layout()\n",
    "#plt.savefig('Assignment I Histograms 6 of 6.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Creating a threshold when looking at distribution grapgs, \n",
    "\n",
    "\n",
    "high_meals_total               = 195\n",
    "meals_unique                   = 10\n",
    "low_cust_service               = 1\n",
    "high_cust_service              = 13\n",
    "Low_vid_avg_time               = 20\n",
    "high_vid_avg_time              = 350\n",
    "low_cancellations_before       = 8\n",
    "high_cancellations_after       = 2\n",
    "high_late_deliveries           = 15\n",
    "high_avg_time_site             = 160\n",
    "low_avg_clicks                 = 7\n",
    "high_avg_clicks                = 18.5\n",
    "high_total_photos              = 390\n",
    "low_comp_logins                = 5\n",
    "high_comp_logins               = 6\n",
    "low_mob_logins                 = 0.5\n",
    "high_mob_logins                = 2.5\n",
    "low_largest_order              = 2\n",
    "high_largest_order             = 9\n",
    "high_masterclass               = 2\n",
    "high_early_delivery            = 4\n",
    "\n",
    "\n",
    "high_revenue              = 4500 #95% Quantile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Developing features (columns) for outliers\n",
    "\n",
    "# Total Meals\n",
    "chef_data['out_total_meals'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_total_meals'][chef_data['TOTAL_MEALS_ORDERED'] > high_meals_total]\n",
    "\n",
    "chef_data['out_total_meals'].replace(to_replace       = high_condition,\n",
    "                                value          = 1,\n",
    "                                inplace        = True)\n",
    "\n",
    "\n",
    "# Unique Meals\n",
    "chef_data['out_unique_meals'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_unique_meals'][chef_data['UNIQUE_MEALS_PURCH'] > meals_unique]\n",
    "\n",
    "chef_data['out_unique_meals'].replace(to_replace      = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "\n",
    "# Customer Service\n",
    "chef_data['out_cust_service'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_cust_service'][chef_data['CONTACTS_W_CUSTOMER_SERVICE'] > high_cust_service]\n",
    "low_condition  = chef_data.loc[0:,'out_cust_service'][chef_data['CONTACTS_W_CUSTOMER_SERVICE'] < low_cust_service]\n",
    "\n",
    "chef_data['out_cust_service'].replace(to_replace      = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "chef_data['out_cust_service'].replace(to_replace      = low_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "# Avg Time Prep Vid Watched\n",
    "chef_data['out_avg_time_prep_vid'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_avg_time_prep_vid'][chef_data['AVG_PREP_VID_TIME'] > high_vid_avg_time]\n",
    "low_condition = chef_data.loc[0:,'out_avg_time_prep_vid'][chef_data['AVG_PREP_VID_TIME'] < Low_vid_avg_time]\n",
    "\n",
    "chef_data['out_avg_time_prep_vid'].replace(to_replace = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "chef_data['out_avg_time_prep_vid'].replace(to_replace = low_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "\n",
    "# Cancellations Before Noon\n",
    "chef_data['out_cancel_before'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_cancel_before'][chef_data['CANCELLATIONS_BEFORE_NOON'] > low_cancellations_before]\n",
    "\n",
    "chef_data['out_cancel_before'].replace(to_replace     = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "\n",
    "# Cancellations After Noon\n",
    "chef_data['out_cancel_after'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_cancel_after'][chef_data['CANCELLATIONS_AFTER_NOON'] > high_cancellations_after]\n",
    "\n",
    "chef_data['out_cancel_after'].replace(to_replace      = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "# Early Deliveries\n",
    "chef_data['out_early_deliveries'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_early_deliveries'][chef_data['EARLY_DELIVERIES'] > high_early_delivery]\n",
    "\n",
    "chef_data['out_early_deliveries'].replace(to_replace  = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "\n",
    "# Late Deliveries\n",
    "chef_data['out_late_deliveries'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_late_deliveries'][chef_data['LATE_DELIVERIES'] > high_late_deliveries]\n",
    "\n",
    "chef_data['out_late_deliveries'].replace(to_replace   = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "\n",
    "# Avg Time Per Site Visit\n",
    "chef_data['out_site_visit_time'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_site_visit_time'][chef_data['AVG_TIME_PER_SITE_VISIT'] > high_avg_time_site]\n",
    "\n",
    "chef_data['out_site_visit_time'].replace(to_replace   = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "\n",
    "# Avg Clicks per Visit\n",
    "chef_data['out_avg_clicks_visit'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_avg_clicks_visit'][chef_data['AVG_CLICKS_PER_VISIT'] > high_avg_clicks]\n",
    "condition_lo = chef_data.loc[0:,'out_avg_clicks_visit'][chef_data['AVG_CLICKS_PER_VISIT'] < low_avg_clicks]\n",
    "\n",
    "chef_data['out_avg_clicks_visit'].replace(to_replace = high_condition,\n",
    "                                 value        = 1,\n",
    "                                 inplace      = True)\n",
    "\n",
    "chef_data['out_avg_clicks_visit'].replace(to_replace = high_condition,\n",
    "                                 value        = 1,\n",
    "                                 inplace      = True)\n",
    "\n",
    "\n",
    "# Total Photos Viewed\n",
    "chef_data['out_total_photos'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_total_photos'][chef_data['TOTAL_PHOTOS_VIEWED'] > high_total_photos]\n",
    "\n",
    "chef_data['out_total_photos'].replace(to_replace      = high_condition,\n",
    "                                    value      = 1,\n",
    "                                    inplace    = True)\n",
    "\n",
    "\n",
    "# PC Logins\n",
    "chef_data['out_pc_logins'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_pc_logins'][chef_data['PC_LOGINS'] > high_comp_logins]\n",
    "low_condition  = chef_data.loc[0:,'out_pc_logins'][chef_data['PC_LOGINS'] < low_comp_logins]\n",
    "\n",
    "chef_data['out_pc_logins'].replace(to_replace         = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n",
    "\n",
    "chef_data['out_pc_logins'].replace(to_replace         = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n",
    "\n",
    "\n",
    "# Mobile Logins\n",
    "chef_data['out_mobile_logins'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_mobile_logins'][chef_data['MOBILE_LOGINS'] > high_mob_logins]\n",
    "low_condition  = chef_data.loc[0:,'out_mobile_logins'][chef_data['MOBILE_LOGINS'] < low_mob_logins]\n",
    "\n",
    "chef_data['out_mobile_logins'].replace(to_replace     = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n",
    "\n",
    "chef_data['out_mobile_logins'].replace(to_replace     = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n",
    "\n",
    "# Largest Order\n",
    "chef_data['out_largest_order'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_largest_order'][chef_data['LARGEST_ORDER_SIZE'] > high_largest_order]\n",
    "low_condition  = chef_data.loc[0:,'out_largest_order'][chef_data['LARGEST_ORDER_SIZE'] < low_largest_order]\n",
    "\n",
    "chef_data['out_largest_order'].replace(to_replace     = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n",
    "\n",
    "chef_data['out_largest_order'].replace(to_replace     = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n",
    "\n",
    "\n",
    "# Masterclass\n",
    "chef_data['out_masterclass'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_masterclass'][chef_data['MASTER_CLASSES_ATTENDED'] > high_masterclass]\n",
    "\n",
    "chef_data['out_masterclass'].replace(to_replace       = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n",
    "\n",
    "\n",
    "# Revenue\n",
    "chef_data['out_revenue'] = 0\n",
    "high_condition = chef_data.loc[0:,'out_revenue'][chef_data['REVENUE'] > high_revenue]\n",
    "\n",
    "chef_data['out_revenue'].replace(to_replace           = high_condition,\n",
    "                                 value         = 1,\n",
    "                                 inplace       = True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10    404\n",
       "20    361\n",
       "30    242\n",
       "70    190\n",
       "0     155\n",
       "60    150\n",
       "80    142\n",
       "50    140\n",
       "40     97\n",
       "90     65\n",
       "Name: FOLLOWED_RECOMMENDATIONS_PCT, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "chef_data['FOLLOWED_RECOMMENDATIONS_PCT'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Followed Percentage Threshold\n",
    "high_followed_perc_threshold   = 30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Developing features (columns) for trend outlier\n",
    "\n",
    "\n",
    "# % Recommendations Followed\n",
    "chef_data['change_followed_pct'] = 0\n",
    "condition = chef_data.loc[0:,'change_followed_pct'][chef_data['FOLLOWED_RECOMMENDATIONS_PCT'] > high_followed_perc_threshold]\n",
    "\n",
    "chef_data['change_followed_pct'].replace(to_replace = condition,\n",
    "                                   value     = 1,\n",
    "                                   inplace   = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# saving results\n",
    "chef_data.to_excel('df_feature_rich (2).xlsx',\n",
    "                 index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# loading saved file\n",
    "chef_data = pd.read_excel('df_feature_rich (2).xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "#looping over families with more than 10 members to include all\n",
    "for name in chef_data['FAMILY_NAME']:\n",
    "        if   'Targaryen' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Targaryen',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Stark' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Stark',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Frey' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Frey',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Lannister' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Lannister',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Tyrell' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Tyrell',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Greyjoy' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Greyjoy',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Hightower' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Hightower',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Florent' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Florent',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Vance' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Vance',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Frey' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Frey',\n",
    "                          inplace    =  True)\n",
    "        elif 'Royce' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Royce',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Botley' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Botley',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        elif 'Rivers' in str(name):\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Rivers',\n",
    "                          inplace    =  True)\n",
    "\n",
    "        else:\n",
    "             chef_data['FAMILY_NAME'].replace(to_replace = name,\n",
    "                          value      = 'Less than 10',\n",
    "                          inplace    =  True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Less than 10    1595\n",
       "Frey              92\n",
       "Targaryen         57\n",
       "Stark             40\n",
       "Tyrell            34\n",
       "Lannister         32\n",
       "Greyjoy           16\n",
       "Hightower         16\n",
       "Florent           14\n",
       "Vance             14\n",
       "Rivers            12\n",
       "Botley            12\n",
       "Royce             12\n",
       "Name: FAMILY_NAME, dtype: int64"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking for the results\n",
    "chef_data['FAMILY_NAME'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAa4AAAEWCAYAAAA+bHOCAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nO3de/xVVZ3/8ddbUFAkLTHMSmkqJxSUlBwtsy9pYuZ4mSxBZxSjGqHo55gWRRfKYdJsrDTBTFS8hGal4yUHRfmmOZpCIl5Is0Sj8oKlBinKt8/vj70Obo/nez/ne84+5/18PM7Dc9Zee+21zuHx/bjX3nt9FBGYmZkVxSb17oCZmVlvOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHBZ05N0lKSlktZK+pOk6yXtI2m2pJdS+TOS/k/S3mX7bi1pnqTHJf1N0r2Sjiurs0/a91lJf5Z0m6R3pW2bSfpvSavTcR6R9O0e9LmrNqdI6kjt5V/bp+2rJO1foc02Sat7+d29SdJPJK1JfblX0pSu2pPULunjuc87Sboi18YKSSdKGpT7jmZL+o2kdan/50salWvvhbKxXpNr/4vpe12bvufLc9t2kXSDpL+k33iZpIN68x1Y43HgsqYm6UTgO8B/ASOBHYC5wKGpyuURsSUwAlgCXJHbdzNgMbAjsDewFXAycGpqF0mvAa4FzgJeB7wR+BqwPjXzBWA8sCcwHJgA3N1Nn7trE+D2iNiy7PXHXn05PXMx8Huy72Ab4BjgiZ7uLOmtwC9TG2MjYivgI2TfyfBU7cfAIcBRZN/xbsAyYL9cU58uG+s/p/aPBf4N2D/9juOBm3L7XQPcSPbbvx74DPBcj0dvjSki/PKrKV9kfwTXAh/pZPts4JLc552BALZNn6cCTwLDyvY7MrX7GrI/lM900YdrgRN62e/u2pwC/KKL7avI/pCXl7cBq3vZl7XAuE62VWwPaAc+nt5fAlzXRfv7A88Db+6izsb2Kmz7HvCdTraNSL/n1vX+t+hXdV8+47JmtjcwFLiyu4rp7OoY4GngL6n4A8D1EbGurPpPUrt7Aw8BHZIWSPqgpNeW1b0DOFHSdEljJakH/e6uzYF0B3C2pEmSdujD/vuTnVF1tf3OiPh9n3qX9e8YSSdLGl+afkyeBh4GLpF0mKSRfTyGNRgHLmtm2wBrImJDF3U+KukZsv/r/wRwRK7+COBP5Tuk7WuAERHxHLAP2f/Z/wB4StLVuT+S3wBOA44GlgJ/SNNbnepBmwB7pWs2pddvu2qzHz4C3Ap8GXhE0vLStbYe2oYK32EvtpecWTbeUwAi4hJgBjAR+DnwpKSZaVuQTc2uAv4b+JOkWyS9vRf9twbkwGXN7GlghKTBXdT5UURsTXYN5D5gj9y2NcAbyndI7Y1I24mIlRExJSLeBIwBtie7rkZEdETE2RHxHmBrYA5wvqTRXXW8qzaTOyJi69zrrV2111cR8ZeImBkRu5B9R8uBq9KZ4wZg0wq7bQq8lN4/TYXvMKe77SWfKRvvl3N9vDQi9if7fo8Hvi5pYtq2OiI+nb6fHYF1wEU9OJ41MAcua2a3Ay8Ah3VXMSLWAP8OzJZU+kO6GPigpGFl1T9MdqPEHRXa+TVwIVmwKd/2fEScTTYVuXNPB9FVmwMpfUffIguirwMeI/sfgy1LdVJA2xF4NBUtJvu+OrMY2FPSm6rQv5ci4gpgBZW//98DZ1faZsXiwGVNKyKeBb5Cdo3mMElbSNo0XTf6ZoX6vwYWAZ9LRRcDq4ErJI1K+04EzgRmR8Szkt4h6bOlP7yS3gxMJgU1SSek28Y3lzQ4TRMOp4s7C7trs4c2lTQ099p41llWPrSr626STpM0JvV9ODANeDgino6Ix8juGDxN0paShpDddbkh19evAu+WdLqk7VKbb5N0iaStI2Ix2V1/V0rao3QcScdL+lh3g1T2aMCH0j6bSPogsAvwS0mvlfS1dLxNJI0APtbL79EakAOXNbWIOAM4EfgS8BTZbdmfBq7qZJfTgU9Ken1ErCe7eeD3ZH+gnwPOAGZFxOmp/l+BfyL7Q7mO7I/ifcBn0/bnya6vPE42tfgp4MMR8bsuut1dmwB769XPceWvPf0sHbv0mp3K31hW/jzQ1TTjFmQ3tzwD/I7sbOqQ3PYjyW4zfxj4A9kt7AdFxAsAEfFbsptYRgH3S3qW7OaWpWmcAEek/l4OPJvGOp7sbKzke2VjXZbKnwO+SHb29wzwTWBaRPwCeDEdd3Gqdx/ZmfKULsZrBaDs+qWZmVkx+IzLzMwKxYHLrA4k7VBhqq/06svzUv3py/2d9OPogeyHWU95qtDMzArFZ1xmZlYoXT2YaV0YMWJEjBo1qs/7r1u3jmHDyh8Pan6tOm7w2D321tPfsS9btmxNRGxbXu7A1UejRo1i6dKlfd6/vb2dtra26nWoIFp13OCxe+ytp79jl/RopXJPFZqZWaE4cJmZWaE4cJmZtbC5y+fWrO0Zj86oSbsNH7iUpe2eWFZ2gqTafds1tHDhQsaMGcN+++3HmDFjWLhwYb27ZGYtbN498+rdhV4rws0ZC4FJZIuflkwiW8yzUBYuXMisWbOYP38+HR0dDBo0iKlTpwIwefLkOvfOzKwYGv6Miyx76sFp5WkkjSJLq7Bc0k2SfiXpXkmHlrZLWinpB2lFgBskbZ62vU3SYkn3pP3emspPlnSXpBWSvlargcyZM4f58+czYcIEBg8ezIQJE5g/fz5z5syp1SHNzLp02cGX1bsLvdbwZ1wR8bSkO4EDgf8hO9u6nGxV68Mj4rmUruAOSVen3d4OTI6IT0j6EVk+oEuAS4FTI+JKSUOBTSQdkOrvCQi4WtK+EXFLeV8kfRL4JMDIkSNpb2/v1VhWrlxJR0cH7e3trF27lvb2djo6Oli5cmWv2yqq0rhbkcfeXu9u1EWjj/2x9Y/x1JCnatZ+TcYeEQ3/Av4VWJjeLwd2J8uy+j2ypHHLyQLZdmRpDH6T2/fzZCkthgOrK7T9LbLU3svT62Fgand92mOPPaK3dtlll7j55psjImLJkiUREXHzzTfHLrvs0uu2iqo07lbksbemRh/7mAvHNGzbwNKo8Pe34c+4kquAMyTtDmweEb+SNAXYFtgjIl6StAoYmuqvz+3bAWxOdjZViYBvRMT3a9LznFmzZjF16tSN17iWLFnC1KlTPVVoZtYLhQhcEbFWUjtwPtnNGgBbAU+moDWBLMFdV208J2m1pMMi4qp0zWwQ2U0fp0i6NB3njcBLEfFktcdRugFjxowZrFy5ktGjRzNnzhzfmGFm1guFCFzJQuCnZNe4ILtedY2kpWRTfL/uQRv/Bnxf0teBl4CPRMQNkkYDt6cM5mvJpiarHrggC16TJ09u6WVgzKxxTNttWr270GuFCVwRcSW56b6IWEOWErySMbl638q9/w3w/gptfxf4btU6a2ZWENPHTa9Z22fteFZN2i3C7fBmZmYbOXCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhFCpwSdpG0vL0elzSH3KfN+tn26slbS1psKRnqtVnM2s+tUy+2ExqlUiyMA8gQ7ZSPDAOQNJsYG3+AeOuSBocERtq2L0eGTp0KOvXv7yU4pAhQ3jhhRfq2CMz661598yr6YO71rVCnXF1RtI3JH0q9/k0SdMl7Z/yb10G3J22HSvpznSWNlfSgH0HpaA1cuRILrjgAkaOHMn69esZOnRo9zubmRnQJIELOA+YAiBpEPARXl6Mdy/gcxExVtIY4HDg3RExjuyMc9Krm6uNUtB6/PHHGTVqFI8//vjG4GVmxVHE5IvNpFBThZ2JiN9K+quksWSrxN8ZEX9Ji+beHhGPpar7A+8ClqZtmwO/7+lx+ptIEuDUU099RSLJU089leOOO66hE81VU6Mn1aslj7293t2omt4kX2y2sfdWyyaSrPQCZgMn5T4fDfw38BPggFS2P3BVrs5/AKd00t5qYGuyYP5Md8fvSyJJIEaOHBkRLyeXGzlyZGQ/Q2to9KR6teSxN4/eJEhstrH3Rq0SSTbLVCFkAeufyW7eWNxJncXARyWNgI13Ke4wQP1jyJAhPPHEE2y33XasWrWK7bbbjieeeIIhQ4YMVBfMzAqvKaYKASLiBUm3AI9HxN87qXOvpK8Bi9NNGS8BxwOPVapfbS+88AJDhw7liSee4LjjjgN8V6GZWW8VNnBFxOz85xSI9gQOy9VZTNnZV0T8EPhhhfbelPu4dTX7mlcKUk4kaVZcRUy+2EyaYqow3ZTxW+B/I+J39e6PmTU3P8PVM7VKJFnYM668iLgXeEu9+2FmZrXXFGdcZmbWOhy4zMysUBy4zMysUBy4zMysUBy4zMysUBy4zMz6yHm5ulaYfFyStgFuSh+3AzqA0mqUe0bEi9U+ZpGkxX1fIVuSy8yKxnm56qPqZ1wR8XREjIssbcg5wLdLn3sStFJakj6T1LDPppWC1qBBgzjjjDMYNGjQK8rNzKx7AzpVKOkaScsk3S/p46lssKRnJP2npDuBPSUdIulBSbdKOkvSVanuXpJul3S3pNskvT2Vf1zSZZKuBa6XtFDSh3LHvVzSQelYZ6REkityfdhf0k2SfpqOe1GtvoNBgwaxYcMG3vnOd7Jhw4aNwcvMzHpmoM9Ojo2IP0vagiwn1k+AvwJbAb+KiC+lbQ8B7yFb/PZHuf1XAvtERIekA4H/BI5M2/YGxkWWh2s/YBpwnaTXkuXgOgr4d+DJiNhT0hDgDkk3pP13B3YGnkzle0XEHfnOVyMf1+mnn/6KfFynn346J554Ysvk62nl3EQee3u9u1F1J293crfjatax91Th8nHx6pxZpwD3pNdzwHiy4LkeUKozHrgpt8+/kHJqkSWJ/B/gvtIrlX8c+EFuHwEPANsAnwZOTeVXAQ8Cy9PrEWA/srxd1+f2/wEwqaux9TUf16BBgyLi5Rw9gwYNcj6uFuGxN5/71tzXbZ1mHXtPFD4fl6T9gX2BvSJiN2AFMDRtfj51ErKg05k5wKKIGEO2CvzQ3LZ1pTeprUvJzrKOAy7ItT09Xr7m9paIKN1Isj7XVgc1Ohvt6Ohg8ODB3H333QwePJiOjo5aHMbMBsCkayfVuwstaSCvcW0F/Dkinpe0C9n0XSX3A/8o6c3K7lo4MrdtK+AP6f2Ubo53AXAy8EJEPJjKFgHTSzdwSPpHSZv3fih9U4rNHR0dnHjiiRuD1ssx28zMujOQges6YAtJ9wBfAX5ZqVJE/I1sem8xcCvwR+DZtPk04HRJt3V3sIj4I9m1sgtyxd8HfgMsl3QfMI8Bvs5XOtVdsmRJfkrVzMx6qKZ/tCOX7DEiXgAmdlK1PHHj4oj4x3TG9X1gaWrjF8BOuXpfSuXnlTcoaRjwD8DluT50ADPT6xXHI5dwMiKO72pcZmbghJL10qgrZ0yTtJzsBovNyW6W6DFJE8nuQPx2RPy1Bv0zM/PDx91oqUSSEXE6cHo/9l8E7FC9HpmZWaNo1DMuMzOzihy4zMysUBy4zMysUBy4zMysUBy4zMysUFTUB2AlzSJb0qkD+DvZArp7A+emh5h701Y72ZqKS3u6z/jx42Pp0h5Xf5Vdvnwd617q8+5mlrPZiBt5cc0H6t0NKzN89EzuPfbePu8vaVlEjC8vb8jb4bsjaW/gYGD3iFgvaQSwGdnDxpcAPQ5c/c3/1VfrXoJVp36o+4pNpr29nba2tnp3oy489raatT92wUweOuk7NWu/P1r5dx+7oHyth+oo6lThG4A1EbEeICLWAEcA2wNLJC0BkDRP0tKU/+trpZ0lrZL0FUm/AD6SK99E0gJJ/1nrATx62sG1PoSZWVMqauC6AXizpIckzZX0vog4k2xdwwkRMSHVm5VOM3cF3idp11wbL0TEPhFxWfo8mGxF+Yci4ksDNRAz67/LDr6s+0rWNAo5VRgRayXtAbwXmABcLqnSOelHU/LHwWRnaTuTpVOB3BqGyfeBH0XEnM6OW41EknmtmFyulZPqeeztNWv/sfWP8dSQp2rWfn+08u8OBUwkOVAvsmnCa4BVwIhU9hbgYeC16fOFwJT0fmO99LmdbKX4xcDQnhyzL4kk82ih5JF5rZxUz2Ovnf4mLKylVv7dC59IsppSHq2354rGAY8CfwWGp7LXkCWXfFbSSOCD3TQ7H/gZcEUpX5eZmTWeov6B3hI4S9LWwAayM6tPApOB6yX9KSImSLqbLDHl74Ce5PA6Q9JWwMWSjo6Iv9dqADt+/tpaNW1m1tQK+xxXvfX3Oa5RM6+rYm/MWpuf42pMfo6ryVx44LCWfLajlZ9p8djbaniExn0msrV/92E1abeQ17jMzKx1OXCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmhFOYBZEkdwL1kz549AvxbRDxTr/44kaRZffmh48bnB5Dh+YgYByBpAfApoNOV3BudE0m2Ho+9raptNnLyyLxW/t2dSPKVbgfeCKDM6ZLuk3SvpCNT+cWSDi3tIOlSSYdIGiTpW6nuCkkz0vY9JP1c0jJJiyS9oZYDcCJJM7O+KVzgkjQI2A+4OhX9C9nq8LsB+wOnp6BzHnBc2mcr4N1kq79/kizlyTsjYlfgUkmbAmcBR0TEHsD5FPhszqwVOHlk6yrSVOHmkpYDo4BlwI2pfB9gYUR0AE9I+jnwroi4WtLZkl5PFtx+EhEbJO0PnBMRGwAi4s+SxgBjgBslAQwC/lTeASeS7L9WTqrnsbdXtc1GTh6Z18q/O9Tm71yRAtfzETEunT1dS3aN60xAXexzMXA0MAn4WCoTUH5HioD7I2LvrjoQEecC50J2c0Z/561bcd67lef7Pfa2qrY5dsHYfl34Hyit/LuzoDZ/5wo3VRgRzwKfAU5KU3y3AEema1fbAvsCd6bqFwInpP3uT2U3AMeXkkVKeh3wILCtpL1T2aaSdhmgIZmZWS8ULnABRMTdwD1kZ1JXAivS55uBz0XE46neE8BK4ILc7ucBjwErJN0DHBURLwJHAKelsuVk18Rqxokkzcz6pjDPcfWFpC3Inv3aPZ2pVY0TSZrVl5/janx+jquX0k0Y5wNnVDtoVYMTSbYej72tyq0W4znI1v7da5NIsmkDV0QsBnaodz/MzKy6CnmNy8zMWpcDl5mZFYoDl5mZFYoDl5mZFYoDl5mZFUpTP8dVS87HZVaZn6+ykpZ+jquzJJKStgfOjIgj6trBPnA+rtbTKmOvlCerVcZeSSuPvdXzcT0fEeMiYgzwZ7IFdomIP1YjaJXWLRxIzsdlZtY3RQlcefkkkqMk3Zfe/zK/MK6k9pQccpik8yXdJenuUnJJSVMkXSHpGuAGSW+QdIuk5Skp5XvrMTizonOeLKu1QkwVluSSSM6vsPky4KPAV1Miye0jYpmk/wJujoiPSdoauFPS4rTP3sCuKSfXZ4FFETEnHWeLCsd3Pq5+auXcRK0y9kp5slpl7JW08tihRn/nIqLhX0AH2YrtzwA3AYNS+SjgvvT+jcAD6f3/A+ak90uB+9L+y8lWhh8NTAEuyB1jX+BhYDYwrrs+7bHHHtEf2VffepYsWVLvLtRNq4x9zIVjXlXWKmOvpJXHXunfQm8AS6PC39+iTBU+HxHjgB2BzUjXuPIi4g/A05J2BY4kOwODLEnkhyO7RjYuInaIiJVp27rc/reQBa8/ABdLOqZ2wzEzs74qSuACKiaRLHcZ8Dlgq4go3YO5CJghSQCS3lmpbUk7Ak9GxA/IpiJ3r3b/85yPy8ysbwp1jQuyJJIp2eMk4NayzT8Gvguckis7BfgOWeJIAauASrf0tQEnS3oJWAvU/IyrZXNy/W+LjhtaYuybjdiv8r/tFhh7p1p07MNH16ZdP4DcR/19ALlVn+1o1XGDx+6xt57+jr2zB5ALNVVoZmbmwGVmZoXiwGVmZoXiwGVmZoXiwGVmZoXiwGVmZoXiwGVmZoXS7XNcktZGxJY17YR0AnBuRPytlseUNIfsweLX5tuXNAS4CNgDeBo4MiJWddWWE0maNQYnrmxczZ5I8gTgEuBvNT7ONcD3gN+UlU8F/hIRb5M0CTiNbL3DmnEiydbjsbfVpO1KiSsbSSv/7g2VSFLStpJ+knJc3SXpPan8fSmf1fKU+2p4d3muJH0G2B5YImlJrnyOpHsk3SFpZCr755R3625Ji3Pls1POrXZJv0ttvkpE3BERf6qw6VBgQXr/Y2C/0tqGteJEkmZmfdPXa1zfBb4dEe8CPgycl8pPAj6VVnJ/L/A8cBRZnqtxwG5kqUU2iogzgT8CEyJiQioeBtwREbsBtwCfSOW/APaKiHfy8oK6Je8AJgJ7kuXkqrQIb2feCPw+9WcD8CywTS/2N7M6ceLK1tPXqcL9gZ1zJyWvkTQcuA04Q9KlwE8jYrWku4DzUyC5KiKWV27yFV4ESsunLwNKE9hvAi5PiSI3Ax7J7XNdRKwH1kt6EhgJrO7heCqdXb3q4p8TSfZfKyfV89jba9J2pcSVjaSVf3eoUyJJYG2FsjXA5p3UHwt8nixovCOVbU921nQvcEyFfVYBIyodEzgCuDC9bwcOSe/bgPb0fjZwUm6f+4BRPR0TWeqTvdP7wWl86up7cSLJvmnlpHoee230N1lhrbXy795oiSRvAD5d+iBpXPrvWyPi3og4jSzz8Dt6mOfqr8DwHhx3K7JEjwDH9rHvlVyda+8I4Ob0pZmZWYPpSeDaQtLq3OtEsmSO4yWtkPQAcHyqe0K6AeMesutb15OdGS2XdDfZ9bDvVjjGucD1+ZszOjEbuELSrWRnRb0i6ZuSVufGNDttmg9sI+lh4ESgNrfC5DiRpJlZ3zgfVx/19zmulk0iaVZlfo6rcTX7c1wt58IDh7Xksx2t/EyLx95Wo9Yb+3nI1v7dh9WkXS/5ZGZmheLAZWZmheLAZWZmheLAZWZmheLAZWZmheLAZWZmheLnuPrI+bjMqsfPYjWnQj/HVetklJK+DtwSEYs72X4Y8FBEPFCrPvSW83G1Ho+9rdPtjZ5Tqz9a+XdvqHxcjSYivtJZ0EoOA3buTZuSahrUnY/LzKxv6ha4epsUUtIoSSsl/UDS/ZJukLR52nahpCPS+1MlPZDWUfyWpHcDhwCnp2SWb02v/5W0TNKtkt6Ra+eMtGbiaXX5YszMrEv1XPKplBQyJH2cLCnkZ9O2dwATyFaMf1DSvFT+dmByRHxC0o/IFu29pNSgpNcBh5OlUwlJW0fEM5KuBq6NiB+nejcBx0fEbyT9EzAXeH9qZidg/4joqOHYzSzHySCtN+oZuHqbFBLgkXg5EeUyYFRZm88BLwDnSbqOl5NRbiRpS+DdZKvMl4qH5Kpc0VnQciLJ/mvlpHoee3un2xs9GWR/tPLvDrX5O1fPwHUWcEZEXC2pjSxlScn63PsOXu5nefnm+QYjYoOkPYH9gElkOcPezyttAjwTEeM66de6zjocEeeSpWBh/Pjx0d8Lrq14wbaVL1R77G2dbh+7YGy/7j5rZK38u7OgNn/n6nlzRtWTQqazqa0i4mfACUApOG1MVBkRzwGPSPpI2keSdqvG8c3MrPYGKnBVSkY5m34khezEcOBaSSuAnwP/kcovA05ON4K8FTgamJoSXt4PHFql4/eYE0mamfWNH0DuIyeSNKseP4DcnAr9ALK9mhNJth6Pva2LGs37MH5r/+5OJGlmZubAZWZmxeLAZWZmheLAZWZmheLAZWZmheLAZWZmhVKTwCVpbdnnKZK+l94fL+mYbvbfWL/Cti9Wr6dmZgNr7vK59e7CgJnx6IyatDvgZ1wRcU5EXNSPJgYscEkaVO02J06cyCabbMKECRPYZJNNmDhxYrUPYWYNbN4987qvZF0a8MCV8m2dlN6/K+XNul3S6ZLuy1XdPuXM+o2kb6b6pwKbp7xal6ayEyXdl14npLLP5fJ4fVvSzen9fpIuSe8PSMf9laQr0jqHSFol6SuSfgF8pJpjnzhxIjfccAPHH38811xzDccffzw33HCDg5eZWS/UKnCVgstyScuBr3dS7wKyvFh7k632njcOOBIYCxwp6c0RMRN4PiLGRcTRkvYAjgP+CdgL+ISkdwK3AO9N7YwHtpS0KbAPcKukEcCXyPJu7Q4sBU7MHfuFiNgnIqqaJOjGG29k2rRpzJ07ly233JK5c+cybdo0brzxxmoexswamHOP9V+tlnx6Pp82RNIUsgBCrmxrYHhE/F8q+iGQz2d/U0Q8m+o+AOwI/L7sOPsAV0bEulTvp2QBax6wh6ThZKlQfpWO/17gM2RBbmfgtpSTazPg9ly7l1caVH/zcUUEBx10EO3t7Rtz9Bx00EHMmzevZfL1tHJuIo+9vd7dqIvysTdz7rFKmi0fl7rZ3llOrm7biIiXJK0iOxv7P2AFWUbltwIr039vjIjJnRy7Yk6u/ubjksTPfvYz5s6du3H9sunTpyOpZdYya+112zz2VlQ+9mbOPfYqzZaPKyL+AvxV0l6paFIPd30pTftBNiV4mKQtJA0DDgduzW07Kf33VuB4YHlky+HfAbxH0tsA0v479XtQ3fjABz7AvHnzmD59OmvXrmX69OnMmzePD3zAq2KbmfVUvVeHnwr8QNI6oB14tgf7nAuskPSrdJ3rQuDOtO28iLg7vb8VmAXcHhHrJL2QyoiIp9L05UJJQ1L9LwEPVWFMnVq0aBETJ07knHPOYd68eUjigAMOYNGiRbU8rJlZU6lJ4IqILcs+XwhcmN7Pzm26PyJ2BZA0k+wmiVfUT58Pzr3/PPD53OczgDMq9OEmYNPc553Ktt8MvKvCfqO6Hl3/lIJUK0+dmLWyabtNq3cXCq/eZ1wfkvSF1I9HgSn17Y6ZWW1NHze93l0YMGfteFZN2q1r4IqIy+nkDj4zM7NKvFahmZkVigOXmZkVigOXmZkVigOXmZkVigOXmZkVigOXmZkVirIVkOpP0kjg22QL4P4FeBH4ZkRc2c92twfOjIgj+t/Ll40fPz6WLl3a5/3HLhjLX1eeWsUeWbPZbMSNvLjGy4FZcQ3bFO4/5UN93l/SsogYX15e75CqSR8AABBtSURBVAeQAVC2RPtVwIKIOCqV7QgcUlZvcERs6E3bEfFHoKpBq1pWndr3H7SoWnnFkN6OfeyCmTx00ndq16EB5N+9rd7dqItRM6+rSbuNMlX4fuDFiDinVBARj0bEWZKmpESP1wA3AEg6WdJdKQnl11LZKZL+X2l/SXMkfUbSqFKCSklDJV0g6V5Jd0uakMpvlZRPw3KbpF0HZuhmZs3p0dMO7r5SHzRK4NqFLGdWZ/YGjo2I90s6AHg7sCdZssk9JO0LzAeOBZC0Cdlq85eWtfMpgIgYC0wGFkgaCpxHWm4qrRI/JCJWVGdoZn3jhINmlTXEVGE5SWeTJYl8ETibLHfWn9PmA9KrtAr8lsDbI+IWSU+nDMgjgbsj4umUTLJkH+AsgIj4taRHgZ2AK4AvSzoZ+Bi5BX7L+tWvRJLlWjGxnhMKtve4fjMlHPTv3l7vbtRNsyWSzLsf+HDpQ0R8StII0mrxvDKxo4BvRMT3K7RTOnPaDji/wvbOEk/+TdKNwKHARynL1pyr169Ekq9QowRrja6V5/t7f42reRIO+ndvq3c36qapEkmWuRkYKim/3v8WndRdBHxM0pYAkt4o6fVp25XAgWTpSioluboFODrttxOwA/Bg2nYecCZwV+7szszMGkxDnHFFREg6DPi2pM8BT5GdZX0e2Lys7g2SRgO3Zzcjshb4V+DJiHhR0hLgmYjoyO+W/jsXOEfSvcAGYEpErE/tLpP0HHBBzQZqZtZCdvz8tTVpt2Ge46qGdFPGr4CPRMRvUtkewBkR8b5u9t2eLAvzOyLi790dy89xWa35OS4ruqZ+jqsaJO0MXAtcmQta44EfAjO72fcYYA5wYk+CVjWcteNZtB3bNhCHaiitPN/f+7E3z3N+/t3b6t2NuqjVTSlNE7gi4gHgH8rKlpLdNdjdvhcBF9Woa2ZmVkWNcnOGmZlZjzhwmZlZoThwmZlZoThwmZlZoThwmZlZoTTVc1wDqb/Pce3y5etY91IVO2TWQvyMWzEMHz2zX8uWtcJzXB1A/hs6LCJW1ak73Vr3kvNxtRqPva1q7RUpV1kr/+5jF3T5CG2fNU3gAp6PiHGdbexLEspaevS0g+FUn+2amfVWU1/j6m8Syjp128zMutBMZ1ybS1qe3j8SEYen93sDu0bEn8uSUAq4OpeE8qfAd3NJKPcsP4DzcfVfK+cm8tjbq9beydudXJjvspV/d2jufFzV0NlUYZ+TUJY3VNV8XDgfV6vx2Nuq1t79T9/PLtvsUrX2aqmVf/da5R1spsDVmWoloTSzBjHp2klNk2TTeq+pr3FV0J8klFVVqzw1ZmbNrhXOuDbqYxJKMzNrIH4AOamUhLIr/X0AedTM6/q8r1mr8wPIxeAHkGuoUhLKWrvwwGEtecG2lS9Ue+xtVWyxOA/vt/bvPqwm7TpwUTkJpZmZNaZWuznDzMwKzoHLzMwKxYHLzMwKxYHLzMwKxYHLzMwKpSEDl6QOSctzr1GS2iTVfLkJSSdI2qLWxzEzawRzl8+tWdszHp1Rk3YbMnCRFszNvVb1tgFJfb3V/wSgZoFr4cKFjBkzhv32248xY8awcOHCWh3KzKxb8+6ZV+8u9Fohn+OS9DqyhXD/Afgb8MmIWCFpNrA9MApYI+nfgFOBNmAIcHZEfF9SGzAbWAOMAZaRLf00I+2/RNKaiJhQzX4vXLiQWbNmMX/+fDo6Ohg0aBBTp04FYPLkydU8lJlZ02rUM67Nc9OEV1bY/jWy1CO7Al8ELspt2wM4NCKOAqYCz0bEu8gWz/2EpLekeu8kO7vamSwAvicizgT+CEyodtACmDNnDvPnz2fChAkMHjyYCRMmMH/+fObMmVPtQ5mZ9chlB19W7y70WqOecXWWW6tkH+DDABFxs6RtJG2Vtl0dEc+n9wcAu0o6In3eiiyR5IvAnRGxGiAloBwF/KKrTvU3keTKlSvp6Oigvb19Y3K5jo4OVq5c2TKJ5lo5qZ7H3l7vbtRFo4/9sfWP8dSQp2rWvhNJvkwVykqrBZfn35oREa9IU5KmCtfnijrowXfR30SSo0ePZtCgQbS1tW1cv2zJkiWMHj26ZdYya+112zz2VtToYx+7YGztcpvVKJFko04VducW4GjYGITWRMRzFeotAqZJ2jTV3UlSd6s+/hUYXsW+bjRr1iymTp3KkiVL2LBhA0uWLGHq1KnMmjWrFoczM2tKRT3jmg1cIGkF2c0Zx3ZS7zyyKcBfKUvA9RRwWDdtnwtcL+lP1b7OVboBY8aMGaxcuZLRo0czZ84c35hhZtYLDRm4ImLLCmXtQHt6/2fg0Ap1Zpd9/jvZzRtfLKu6sa1U79O592cBZ/Wt592bPHkykydPbvjpAzNrDdN2m1bvLvRaUacKzcysCqaPm16zts/asTbnAA5cZmZWKA5cZmZWKA5cZmZWKA5cZmZWKA5cZmZWKA5cZmZWKIqI7mvZq4wfPz6WLl3a5/13+fJ1rHupih0yazGbjbiRF9d8oN7dsC4MHz2zX8tJSVoWEePLyxvyAeQ8SR3AvWTrDnYAn46I/+ui/ijg3RHxw/S5DTgpIg6ueWd7Yd1LsOrUD9W7GwOulR+89tjbqtrm2AUzeeik71S1zVpo5d997IKZNWm3CFOFpaSSuwFfAL7RTf1RwFE175WZmdVFEQJX3muAvwAoc7qk+yTdK+nIVOdU4L0pl9d/5HeWNEzS+ZLuknS3pENT+a2SxuXq3SZp11oO5NHTGuoE0MysMBp+qpCUVBIYCrwBeH8q/xdgHLAbMAK4S9ItwExyU4NpqrBkFnBzRHxM0tbAnZIWky3GOwU4QdJOwJCIWFHzkZlZnxUxAaJVRxEC18akkpL2Bi6SNIYsmeTCiOgAnpD0c7Isx5XSm5QcABwi6aT0eSiwA3AF8GVJJwMfAy6stHN/E0mWa+TkcrXS6En1asljb69qm7VOgFgtrfy7gxNJEhG3SxoBbEvlZJLdEfDhiHjwVRukG8lWnP8o8Kq7WNLx+5VIslwrXrBt5QvVHntbVdusaQLEKmrl392JJAFJ7wAGAU+TJZM8UtIgSdsC+wJ30nUiyEXAjJSbC0nvzG07DzgTuCulTTEzswZUhDOu0jUuyM6Yjo2IDklXAnsD9wABfC4iHpf0NLBB0j1kU35359o6BfgOsCIFr1XAwQARsUzSc8AFAzAmdvz8tQNxGDOzpuMHkBNJ25Mll3xHSkDZpf4+gDxq5nV93tfM/AByEbTsA8gDQdIxwBzgxJ4ErWq48MBhLTnv3crz/R57W5VbLcYD/K39uw+rSbsOXEBEXARcVO9+mJlZ9wp1c4aZmZmvcfWRpKeAR/vRxAhgTZW6UyStOm7w2D321tPfse8YEduWFzpw1YmkpZUuOja7Vh03eOwee+up1dg9VWhmZoXiwGVmZoXiwFU/59a7A3XSquMGj71VeexV5mtcZmZWKD7jMjOzQnHgqiFJB0p6UNLDkl6Vw1rSEEmXp+2/lDRq4HtZGz0Y+4mSHpC0QtJNknasRz9robux5+odISkkNc0dZz0Zu6SPpt/+fkk/HOg+1koP/s3vIGlJSmK7QtJB9ehntaXkvE9Kuq+T7ZJ0ZvpeVkjavd8HjQi/avAiW8X+t8A/AJuRLQa8c1md6cA56f0k4PJ693sAxz4B2CK9n9ZKY0/1hpNlOLgDGF/vfg/g7/52soWvX5s+v77e/R7AsZ8LTEvvdwZW1bvfVRr7vsDuwH2dbD8IuJ5skfS9gF/295g+46qdPYGHI+J3EfEicBlZvq+8Q4EF6f2Pgf1KKVcKrtuxR8SSiPhb+ngH8KYB7mOt9OR3hyxTwTeBFwayczXWk7F/Ajg7Iv4CEBFPDnAfa6UnYw/gNen9VsAfB7B/NRMRtwBdpYI6FLgoMncAW0t6Q3+O6cBVO28Efp/7vDqVVawTERuAZ4FtBqR3tdWTsedNJfs/smbQ7dhTHrg3R0Sz5bbpye++E7CTpNsk3SHpwAHrXW31ZOyzgX+VtBr4GTBjYLpWd739e9AtL7JbO5XOnMpv4exJnSLq8bgk/StZxun31bRHA6fLsUvaBPg2MGWgOjSAevK7DyabLmwjO8u+VdKYiHimxn2rtZ6MfTJwYUT8t6S9gYvT2AckI0UdVf3vnM+4amc18Obc5zfx6qmBjXUkDSabPmiG7Ms9GTuS9gdmAYdExPoB6lutdTf24cAYoF3SKrI5/6ub5AaNnv6b/5+IeCkiHgEeJAtkRdeTsU8FfgQQEbcDQ8nW8mt2Pfp70BsOXLVzF/B2SW+RtBnZzRdXl9W5Gjg2vT8CuDnS1cyC63bsabrs+2RBq1muc0A3Y4+IZyNiRESMiohRZNf3DomIvmclbRw9+Td/FdmNOUgaQTZ1+LsB7WVt9GTsjwH7AUgaTRa4nhrQXtbH1cAx6e7CvYBnI+JP/WnQU4U1EhEbJH0aWER2x9H5EXG/pK8DSyPiamA+2XTBw2RnWpPq1+Pq6eHYTwe2BK5I96M8FhGH1K3TVdLDsTelHo59EXCApAeADuDkiHi6fr2ujh6O/bPADyT9B9lU2ZRm+B9VSQvJpn5HpOt3XwU2BYiIc8iu5x0EPAz8DTiu38dsgu/NzMxaiKcKzcysUBy4zMysUBy4zMysUBy4zMysUBy4zMysUBy4zMysUBy4zGpMUoek5bnXqNy270r6Q1oKqlQ2JaU72S9XdngqOyJ9bi+ttiFpVXqYt1R3V0m/ljQ0V7aotG+F/n1c0t8l7ZIr+7WkN+U+v6tCnwansgtyZZtJ+rOkq3JtP1U2/n/s/bdo9jIHLrPaez4ixuVeq2DjuoWHky1Aum/ZPveSrW1XMoksVUa3ImIFcC0wMx3nCODvEfHjLnZbDXyxi+2TgV+U9QngOWB3SUPS54lkK0TkXVo2/gd7Mg6zzjhwmdXPBOA+YB6vDgi3AntK2lTSlsDbgOW9aPurwFGSdgXmAJ/qpv5VZAHobeUbUoD9MNnyZB9MSxqVBNlqER9MnycDC3vRT7Nec+Ayq73Nc9NkV+bKS3/krwQOlrRpblsAi8nOYA7l1evedSki1gGfJztLujgiulsP8O9ky3B9ocK2fYFfpzZuA8pTkVwGTJK0BTAaWFa2/eiyqcLNMOsHBy6z2stPFR4O2bUgsvXbroqI54BfAgeU7XcZ2RThJPpwFhMRVwJrgbk93OViYF9JO5SVT059KfXpFWeHEfErssVyJwPXVGi3fKrwxZ6OwawSL7JrVh8HkqWxuTctMrwF2QKk15UqRMSdksaQBb6H+pgc++/p1a2IeEnSt4HPlcrSWeDhwEGSvkr2P7tbSxoG5FPRXEuW0Xkf+pkk0Kw7Dlxm9TEZ+HhELARIgeCRNN2W9wXghQHs13zgAbK8YZCdBd4VER8qVZB0KXAIcEVuv/OAJyNipSQHLqspTxWaDbAUnCbyyrOrdWTXo/45Xzciro+IJT1odoWk1el1Rl/7lhJ6ng1sm4omk12Dy/sJcFTZfo9FxPc6abb8Gtc/9bV/ZuC0JmZmVjA+4zIzs0LxNS6zFiHp48Cny4pviYjP1KM/Zn3lqUIzMysUTxWamVmhOHCZmVmhOHCZmVmhOHCZmVmhOHCZmVmh/H8PZhc0EcNxbwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXUAAAEWCAYAAACZnQc8AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAWHUlEQVR4nO3debRlZX3m8e8jQ5hFKSQqQzlLgR0TSiPGJOWSjjhEXC0iaFpJjESNGppWQzR2yNgq2kmrYCRpGhzBoWMjzkjdJiGgFgEZBBkUtBDDJNiFmAD96z/2vnhyucOpuvfcc+s9389ae61z9rv3e37v3reeOvc9++ybqkKS1IYHjbsASdLSMdQlqSGGuiQ1xFCXpIYY6pLUEENdkhpiqEtSQwx1SWqIoT7hkrw0yYYkm5LclOTzSZ6R5IQk9/Tr70jyj0kOnrHv7knen+QHSX6c5LIkvzljm2f0+96Z5PYk5yd5St+2fZJ3J9nYv853kvzlEDXP1+fRSe7r+xtcHtG3X5/kkFn6XJdk42Yeu72TfCrJrX0tlyU5er7+kkwl+e2B549P8omBPi5NclySbQaO0QlJrklyV1//qUlWD/T3kxlj/cxA/2/pj+um/jifOdB2QJIvJflhf44vSvLczTkGWnkM9QmW5Djgr4C/APYC9gVOBg7rNzmzqnYBVgHrgU8M7Ls9cA6wH3Aw8GDgTcDb+35JshtwNvBe4KHAI4E/Bv6l7+YPgLXAU4FdgWcCFy9Q80J9AlxQVbvMWL6/WQdnOB8Cvkd3DPYAXg7887A7J3kM8NW+jydV1YOBF9Mdk137zT4JvAB4Kd0x/jngIuBZA129bsZYf73v/xXAfwQO6c/jWuArA/t9Bvgy3bl/GPAG4EdDj14rU1W5TOBCFxCbgBfP0X4C8OGB52uAAvbsn78SuBnYecZ+L+n73Y0uRO6Yp4azgWM3s+6F+jwa+Id52q+nC7mZ69cBGzezlk3Ak+dom7U/YAr47f7xh4HPztP/IcDdwD7zbHN/f7O0vQ/4qznaVvXnc/dx/yy6LO3iO/XJdTCwA/B3C23Yvyt/OXAb8MN+9b8HPl9Vd83Y/FN9vwcDVwP3JTk9yXOSPGTGthcCxyV5bZInJckQdS/U53K6EDgpyZFJ9t2C/Q+heyc+X/vXqup7W1RdV9/Lk7wpydrpKZ3ebcC1wIeTvDDJXlv4GlphDPXJtQdwa1XdO882RyS5g+7d4quAwwe2XwXcNHOHvv1WYFVV/Qh4Bt07wr8Bbkly1kCA/FfgHcDLgA3Ajf2UwZyG6BPgaf0c8fRy3Xx9LsKLgb8H3gZ8J8kl03P7Q9qDWY7hZrRPe8+M8f4pQFV9GHg98Gzg/wA3Jzm+byu66a7rgXcDNyU5L8njNqN+rUCG+uS6DViVZNt5tvl4Ve1ON+d6OXDQQNutwMNn7tD3t6pvp6qurKqjq2pv4EDgEXTz+FTVfVV1UlX9ErA78OfAqUn2n6/w+frsXVhVuw8sj5mvvy1VVT+squOr6gC6Y3QJ8On+N457ge1m2W074J7+8W3McgwHLNQ+7Q0zxvu2gRo/UlWH0B3fVwN/kuTZfdvGqnpdf3z2A+4CPjjE62kFM9Qn1wXAT4AXLrRhVd0K/A5wQpLpkDkHeE6SnWds/iK6Dy0vnKWfq4DT6IJ4ZtvdVXUS3fTOmmEHMV+fy6k/Ru+i+w/mocB36f7T3GV6mz7s9wNu6FedQ3e85nIO8NQkey9BffdU1SeAS5n9+H8POGm2Nm1dDPUJVVV3Av+Fbk74hUl2SrJdP0/9zlm2vwr4IvDmftWHgI3AJ5Ks7vd9NvAe4ISqujPJE5P85+lQSrIPcBR94Cc5tr/0b8ck2/ZTL7syzxUwC/U5pO2S7DCw3P/byoz1O8w3z5/kHUkO7GvfFXgNcG1V3VZV36W7suUdSXZJ8jN0VwfdO1DrHwFPT3Jikp/t+3xskg8n2b2qzqG7OuXvkhw0/TpJXp3ktxYaZLrLO5/X7/OgJM8BDgC+muQhSf64f70HJVkF/NZmHketROP+pNZlvAs/nc++C/gB8Fng6cy4+qXf9hf77R7WP38o8AG6y/juBq5g4EoMussNPw7c2O93Y7/9bn3779BdnncncAfwNeD5C9S7UJ9HA/fRXZkyuDylb7+ebj5+cPkzuqtVZq4v4LHz1PJe4Jq+/1vorubZf6B9H7rLQH9ANx31RWDNjD6e0G9zW38cvgEcC2zTt29Pd8nmtf14bwD+Fti3b5+i+41rcKwX9W3/ATif7refHwGXAUf3bTsDp/fHY1Nf48eAR477Z9JlcUv6EyxJaoDTL5LUEENdK06SffPAr/lPL1tyPfhiarlijjpetpx1SMNy+kWSGuI7dUlqyHxfPNliq1atqtWrV2/RvnfddRc77zzz0ufJ4Ngd+6SZ1LEvdtwXXXTRrVW152xtIwn11atXs2HDhi3ad2pqinXr1i1tQVsJx75u3GWMhWNfN+4ylt1ix53khrnanH6RpIYY6pLUEENdkhpiqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKEuSQ0x1CWpIYa6JDXEUJekhhjqktQQQ12SGmKoS1JDDHVJaoihLkkNMdQlqSGGuiQ1xFCXpIYY6pLUEENdkhpiqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKEuSQ0x1CWpIYa6JDXEUJekhhjqktQQQ12SGmKoS1JDDHVJS+7mH9887hJWtNff8PqR9W2oS1pyD9vpYeMuYWIZ6pKW3BGfOWLcJUwsQ13Skrvy9ivHXcLEWjDUk5ya5OYkly9HQZKkLbftENucBrwP+OAoC0nygHVVNcqXlDQie+6457hLmFgLvlOvqvOA20dZxGCgr127dtb1krYe5x5x7rhLmFgrak69qjjxxBN9hy5t5U6+5ORxlzCxhpl+GUqSY4BjAPbaay+mpqY2a/+1a9cyNTXFpk2bmJqaYu3atWzYsGGz+9maTY99Ejn2qXGXsaTef8P7WXPHmgW3a3HswxrZuKtqwQVYDVw+zLZVxUEHHVSbA6iulKr169c/YN2kmB77JHLsbTnwtAOH2q7FsQ9j2OMzF2BDzZG/S/ZOfSkkuf8duiRp8w1zSePHgAuAJyTZmOSVS11EDcyhDwZ6ObcubZXOeP4Z4y5hYg1z9ctRVfXwqtquqvauqv8xikKmf3VYv3794LSPJGkzrKirXyS14cizjxx3CRPLUJekhhjqktQQQ13SknvNz71m3CVMLENd0pJ77ZNfO+4SVrT37vfekfVtqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKEuSQ0x1CWpIYa6JDXEUJekhhjqktQQQ12SGmKoS1JDDHVJaoihLkkNMdQlqSGGuiQ1xFCXpIYY6pLUEENdkhpiqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKEuSQ0x1CWpIYa6JDXEUJekhhjqktQQQ12SGmKoS1JDDHVJaoihLkkNMdQlqSGGuiQ1xFCXpIYY6pLUEENdkhpiqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKEuSQ0x1CWpIYa6JDXEUJekhhjqktQQQ12SGmKoS1JDDHVJaoihLkkNMdQlqSGGuiQ1xFCXpIYY6pLUEENdkhpiqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKEuSQ0x1CWpIYa6JDXEUJekhhjqktQQQ12SGmKoS1JDDHVJakiqask7Xbt2bW3YsGGL9j3gbZ/lrnuWuCBpwmTbH1H37jbuMjSHXfc/nstecdkW75/koqpaO1vbtlvc64jcdQ9c//bnjbuMsZiammLdunXjLmMsHPu6cZcxFpM69iedfvzI+nb6RWrQEZ85YtwlaEwMdalBV95+5bhL0JgMFepJDk3yrSTXJhnd7w3ADe94/ii7l6SmLRjqSbYBTgKeA6wBjkqyZtSFSdpye+6457hL0JgM8079qcC1VfXtqvpX4AzgsNGWJWkxzj3i3HGXoDEZJtQfCXxv4PnGfp2kFerkS04edwkak2Euacws6x5wcXuSY4BjAPbaay+mpqa2uKjF7Ls127Rpk2OfQKMY+/tveD9r7lj5s6STfN5HNe5hQn0jsM/A872B78/cqKpOAU6B7stHi7n2dBKvW4XJvWYXHPuSj/30rePf0cSe9xGen2GmX74OPC7Jo5JsDxwJnDWSaiRJi7LgO/WqujfJ64AvAtsAp1bVFSOvTNIWO+P5Z4y7BI3JULcJqKrPAZ8bcS2SpEVacd8o3e/3zx53CdJW78izjxx3CRqTFRfqkqQtZ6hLUkNW3K13AVYf/9lxlzA+X3DsE2mJx779qmdtPf+OJvC877r/6PpecaF+2qE7T+Z1q0zwNbs49qUf+9bxNwkm9bxPTe08sr6dfpGkhhjqktQQQ12SGmKoS1JDDHVJaoihLkkNMdQlqSGGuiQ1xFCXpIYY6pLUEENdkhpiqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKEuSQ0x1CWpIYa6JDXEUJekhhjqktQQQ12SGmKoS1JDDHVJaoihLkkNMdQlqSGGuiQ1xFCXpIYY6pLUEENdkhpiqEtSQwx1SWqIoS5JDTHUJakhhrokNcRQl6SGGOqS1BBDXZIaYqhLUkNSVUvfaXILcMMW7r4KuHUJy9maOPbJ5Ngnz2LHvV9V7Tlbw0hCfTGSbKiqteOuYxwcu2OfNJM69lGO2+kXSWqIoS5JDVmJoX7KuAsYI8c+mRz75BnZuFfcnLokacutxHfqkqQtNLZQT3Jokm8luTbJ8bO0/0ySM/v2ryZZvfxVjsYQYz8uyTeTXJrkK0n2G0edo7DQ2Ae2OzxJJWniyohhxp3kiP68X5Hko8td46gM8fO+b5L1SS7uf+afO446RyHJqUluTnL5HO1J8p7+2Fya5BcW/aJVtewLsA1wHfBoYHvgG8CaGdu8Fvjr/vGRwJnjqHVMY38msFP/+DWTNPZ+u12B84ALgbXjrnuZzvnjgIuBh/TPHzbuupdx7KcAr+kfrwGuH3fdSzj+XwF+Abh8jvbnAp8HAjwN+OpiX3Nc79SfClxbVd+uqn8FzgAOm7HNYcDp/eNPAs9KkmWscVQWHHtVra+qH/dPLwT2XuYaR2WY8w7wp8A7gZ8sZ3EjNMy4XwWcVFU/BKiqm5e5xlEZZuwF7NY/fjDw/WWsb6Sq6jzg9nk2OQz4YHUuBHZP8vDFvOa4Qv2RwPcGnm/s1826TVXdC9wJ7LEs1Y3WMGMf9Eq6/8lbsODYk/w8sE9Vnb2chY3YMOf88cDjk5yf5MIkhy5bdaM1zNhPAH4jyUbgc8Drl6e0FWFz82BB2y6qnC032zvumZfhDLPN1mjocSX5DWAt8KsjrWj5zDv2JA8C/hI4erkKWibDnPNt6aZg1tH9Zvb3SQ6sqjtGXNuoDTP2o4DTqurdSQ4GPtSP/f+NvryxW/KcG9c79Y3APgPP9+aBv3Ldv02Sbel+LZvv15itxTBjJ8khwFuBF1TVvyxTbaO20Nh3BQ4EppJcTzfHeFYDH5YO+/P+v6vqnqr6DvAtupDf2g0z9lcCHweoqguAHejujTIJhsqDzTGuUP868Lgkj0qyPd0HoWfN2OYs4BX948OBc6v/ZGErt+DY+ymID9AFeitzq7DA2KvqzqpaVVWrq2o13ecJL6iqDeMpd8kM8/P+aboPyEmyim465tvLWuVoDDP27wLPAkiyP12o37KsVY7PWcDL+6tgngbcWVU3LarHMX4q/FzgarpPxt/ar/sTun/E0J3YTwDXAl8DHj3uT7KXceznAP8MXNIvZ4275uUa+4xtp2jg6pchz3mA/wZ8E7gMOHLcNS/j2NcA59NdGXMJ8GvjrnkJx/4x4CbgHrp35a8EXg28euC8n9Qfm8uW4ufdb5RKUkP8RqkkNcRQl6SGGOqS1BBDXZIaYqhLUkMMdUlqiKGuWSW5L8klSS5P8pkku/frVye5u2+bXl7et12f5LKB9U+fsf03k3wwyXb99uuSnD3wmocm+VqSq/rtz0yyb992WpLvDPT9j/36o5Pc0q+7Ksl/mmUs30jysYHnJw3UMziWw4d4nYuTXJPki0mevsAxPC3J4bOsPyDJuUmu7vt62+DN6pI8J8mGJFf2Y3pXv/6EJG/sH++Q5MtJ/mjG+Zpeju/XT6W77e03knw9yZOH+wnQVmvcF+e7rMwF2DTw+HR++qWR1cx9G9HrgVUz1t2/Pd1tWM8FXtY/Xwec3T8+ELgG2H9g3xcAv9I/Pg04fJbXPBp4X/94D+BWuhuCTbfvT/eljhuBneeqbWDdgq/TP38m8IPBemfZ5wF9ATvSfdHk1/rnO9HdsO13B47DdcAT++fbAq/tH58AvJHuFrafBd4+2/ma8XpT9F9oAX4T+PK4f7ZcRrv4Tl3DuIBF3jkOoKruo/t28Gx9/T7wF1V15cD2Z1V369Jh+7+N7hvIg7cufSnwIeBLdP9JLImqWk93H/BjNnPXlwLnV9WX+n5+DLwOmP7jEW8G/ryqrurb762qkwf235bu9rXXVNWcf2RkDktyHrWyGeqaV5Jt6O7LMXi/jsfM+FX/lwfa1vfrvjpLXzsAvwh8YZaXOgD4pwXKOXHgNT8yS//70t1e4tKB1S8BzqT7uvZRC/Q/1OsM+CfgiUP2Oe0A4KLBFVV1HbBLkt3o3qlfNNuOvTcD91bVsTPW7zjjnLxkln0PpbvHjBo2rlvvauXbMckldFMUFwFfHmi7rqrmmpt9ZlXdOmPdY/q+Hgd8sqounWW/+yXZA/gK3dTEKVX1rr7pTVX1yVl2eUmSZwJPAF5VVT/p+3kKcEtV3ZDuXt2nJnlI9X+IYh5zvc4DSh1im9n2meveHMPcs+MfgIOTPL6qrh5Yf/c85+QjSXamm/5a/J9L04rmO3XNZTok9qObw/3dRfQ1/Z/AY4GnJZltGuQK+sCpqtv67U8Bdhmi/zOr6gDgl4F3J/nZfv1RwBPT3cb3Orq/rvOiRYxjpp8Hrlxwq3/rCrp75N8vyaPp5sT/b99+0Dz7nwccC3w+ySOGfM2XAY8CPkp38yg1zFDXvKrqTuANwBunr1pZRF830c0d/8Esze8E3pru1qvTdtrM/i+gmz//vXR/cOPFwL+rn97K9zCGn4KZV5JfpZtP/5vN3PUjwDPS3S+fJDsC76EbP8CJwFuSPL5vf1CS4wY7qKpP9dt9If1VSQupqnuAP6T7T3X/hbbX1stQ14Kq6mK626Ie2a+aOaf+hs3o7tPATjPm4amqy4DfAz7YX8Z3Pt2VKx8d2OzEGa+7/Sz9v4PuKo/nATdW1Y0DbecBa7Lw34Cc63Ve0j+/GngL8KLBD3bn8IEkG/vlgqq6m+4/lz9M8i26K3O+DryvPw6X0r0T/1iSK4HL+bcf/NJv99fA/6L7IyI78MA59bfPss/dwLvprqBRo7z1riQ1xHfqktQQr36RFinJScAvzVj936vqf46jHk02p18kqSFOv0hSQwx1SWqIoS5JDTHUJakhhrokNeT/A1m23m2xZVcoAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# defining a function for categorical boxplots\n",
    "# We wanna look at the categorical variables to see if the different categories affect the revenue differently\n",
    "def categorical_boxplots(response, cat_var, data):\n",
    "    \"\"\"\n",
    "\tThis function can be used for categorical variables\n",
    "\n",
    "\tPARAMETERS\n",
    "\t----------\n",
    "\tresponse : str, response variable \n",
    "\tcat_var  : str, categorical variable\n",
    "\tdata     : DataFrame of the response and categorical variables\n",
    "\t\"\"\"\n",
    "\n",
    "    data.boxplot(column \t     = response,\n",
    "    \t            by \t \t\t = cat_var,\n",
    "        \t        vert \t     = False,\n",
    "            \t    patch_artist = False,\n",
    "                \tmeanline     = True,\n",
    "               \t\tshowmeans    = True)\n",
    "\n",
    "    plt.suptitle(\"\")\n",
    "    plt.show()\n",
    "\n",
    "\n",
    "# calling the function for each categorical variable\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'FAMILY_NAME',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'UNIQUE_MEALS_PURCH',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'FOLLOWED_RECOMMENDATIONS_PCT',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'PACKAGE_LOCKER',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'REFRIGERATED_LOCKER',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'MEDIAN_MEAL_RATING',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'CONTACTS_W_CUSTOMER_SERVICE',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "categorical_boxplots(response = 'CROSS_SELL_SUCCESS',\n",
    "\t\t\t\t\t cat_var  = 'number_of_names',\n",
    "\t\t\t\t\t data     = chef_data)\n",
    "\n",
    "# We want to see how the different categories have effects on the revenue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create dummies for categorical variables\n",
    "one_hot_domain_group  = pd.get_dummies(chef_data['DOMAIN_GROUP'])\n",
    "one_hot_Locker        = pd.get_dummies(chef_data['PACKAGE_LOCKER'])\n",
    "one_hot_Refr_Locker   = pd.get_dummies(chef_data['REFRIGERATED_LOCKER'])\n",
    "one_hot_median_rating = pd.get_dummies(chef_data['MEDIAN_MEAL_RATING'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Renaming and dropping unnecessary columns\n",
    "one_hot_Locker['Locker'] = one_hot_Locker.iloc[:,1]\n",
    "one_hot_Locker           = one_hot_Locker['Locker']\n",
    "\n",
    "one_hot_Refr_Locker['Refr_Locker'] = one_hot_Refr_Locker.iloc[:,1]\n",
    "one_hot_Refr_Locker                = one_hot_Refr_Locker['Refr_Locker']\n",
    "\n",
    "# loop to rename the columns for median rating\n",
    "for col in one_hot_median_rating:\n",
    "    one_hot_median_rating[f\"Median Rating {col}\"] = one_hot_median_rating[col]\n",
    "\n",
    "# dropping original columns\n",
    "one_hot_median_rating.drop(labels = [1,2,3,4,5], axis = 1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['REVENUE', 'CROSS_SELL_SUCCESS', 'NAME', 'EMAIL', 'FIRST_NAME', 'FAMILY_NAME', 'TOTAL_MEALS_ORDERED', 'UNIQUE_MEALS_PURCH', 'CONTACTS_W_CUSTOMER_SERVICE', 'PRODUCT_CATEGORIES_VIEWED', 'AVG_TIME_PER_SITE_VISIT', 'MOBILE_NUMBER', 'CANCELLATIONS_BEFORE_NOON', 'CANCELLATIONS_AFTER_NOON', 'TASTES_AND_PREFERENCES', 'MOBILE_LOGINS', 'PC_LOGINS', 'WEEKLY_PLAN', 'EARLY_DELIVERIES', 'LATE_DELIVERIES', 'FOLLOWED_RECOMMENDATIONS_PCT', 'AVG_PREP_VID_TIME', 'LARGEST_ORDER_SIZE', 'MASTER_CLASSES_ATTENDED', 'AVG_CLICKS_PER_VISIT', 'TOTAL_PHOTOS_VIEWED', 'EMAIL_DOMAIN', 'number_of_names', 'out_total_meals', 'out_unique_meals', 'out_cust_service', 'out_avg_time_prep_vid', 'out_cancel_before', 'out_cancel_after', 'out_early_deliveries', 'out_late_deliveries', 'out_site_visit_time', 'out_avg_clicks_visit', 'out_total_photos', 'out_pc_logins', 'out_mobile_logins', 'out_largest_order', 'out_masterclass', 'out_revenue', 'change_followed_pct', 'business', 'junk', 'private', 'Locker', 'Refr_Locker',\n",
       "       'Median Rating 1', 'Median Rating 2', 'Median Rating 3', 'Median Rating 4', 'Median Rating 5'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# dropping the original columns\n",
    "chef_data = chef_data.drop('DOMAIN_GROUP',        axis = 1)\n",
    "chef_data = chef_data.drop('PACKAGE_LOCKER',      axis = 1)\n",
    "chef_data = chef_data.drop('REFRIGERATED_LOCKER', axis = 1)\n",
    "chef_data = chef_data.drop('MEDIAN_MEAL_RATING',  axis = 1)\n",
    "\n",
    "\n",
    "# joining codings together\n",
    "chef_data = chef_data.join([one_hot_domain_group, \n",
    "              one_hot_Locker, \n",
    "              one_hot_Refr_Locker,\n",
    "              one_hot_median_rating,\n",
    "             ])\n",
    "\n",
    "# checking results\n",
    "chef_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "# dropping not needed columns \n",
    "chef_data = chef_data.drop(labels = ['NAME','EMAIL','FIRST_NAME','EMAIL_DOMAIN','junk'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "chef_data['REVENUE'] +\n",
      "chef_data['FAMILY_NAME'] +\n",
      "chef_data['TOTAL_MEALS_ORDERED'] +\n",
      "chef_data['UNIQUE_MEALS_PURCH'] +\n",
      "chef_data['CONTACTS_W_CUSTOMER_SERVICE'] +\n",
      "chef_data['PRODUCT_CATEGORIES_VIEWED'] +\n",
      "chef_data['AVG_TIME_PER_SITE_VISIT'] +\n",
      "chef_data['MOBILE_NUMBER'] +\n",
      "chef_data['CANCELLATIONS_BEFORE_NOON'] +\n",
      "chef_data['CANCELLATIONS_AFTER_NOON'] +\n",
      "chef_data['TASTES_AND_PREFERENCES'] +\n",
      "chef_data['MOBILE_LOGINS'] +\n",
      "chef_data['PC_LOGINS'] +\n",
      "chef_data['WEEKLY_PLAN'] +\n",
      "chef_data['EARLY_DELIVERIES'] +\n",
      "chef_data['LATE_DELIVERIES'] +\n",
      "chef_data['FOLLOWED_RECOMMENDATIONS_PCT'] +\n",
      "chef_data['AVG_PREP_VID_TIME'] +\n",
      "chef_data['LARGEST_ORDER_SIZE'] +\n",
      "chef_data['MASTER_CLASSES_ATTENDED'] +\n",
      "chef_data['AVG_CLICKS_PER_VISIT'] +\n",
      "chef_data['TOTAL_PHOTOS_VIEWED'] +\n",
      "chef_data['number_of_names'] +\n",
      "chef_data['out_total_meals'] +\n",
      "chef_data['out_unique_meals'] +\n",
      "chef_data['out_cust_service'] +\n",
      "chef_data['out_avg_time_prep_vid'] +\n",
      "chef_data['out_cancel_before'] +\n",
      "chef_data['out_cancel_after'] +\n",
      "chef_data['out_early_deliveries'] +\n",
      "chef_data['out_late_deliveries'] +\n",
      "chef_data['out_site_visit_time'] +\n",
      "chef_data['out_avg_clicks_visit'] +\n",
      "chef_data['out_total_photos'] +\n",
      "chef_data['out_pc_logins'] +\n",
      "chef_data['out_mobile_logins'] +\n",
      "chef_data['out_largest_order'] +\n",
      "chef_data['out_masterclass'] +\n",
      "chef_data['out_revenue'] +\n",
      "chef_data['change_followed_pct'] +\n",
      "chef_data['business'] +\n",
      "chef_data['private'] +\n",
      "chef_data['Locker'] +\n",
      "chef_data['Refr_Locker'] +\n",
      "chef_data['Median Rating 1'] +\n",
      "chef_data['Median Rating 2'] +\n",
      "chef_data['Median Rating 3'] +\n",
      "chef_data['Median Rating 4'] +\n",
      "chef_data['Median Rating 5'] +\n"
     ]
    }
   ],
   "source": [
    "# declaring explanatory variables\n",
    "chef_data_explanatory = chef_data.drop('CROSS_SELL_SUCCESS', axis = 1)\n",
    "\n",
    "\n",
    "# declaring response variable\n",
    "chef_data_target = chef_data.loc[ : , 'CROSS_SELL_SUCCESS']\n",
    "\n",
    "\n",
    "# formatting each explanatory variable for statsmodels\n",
    "for val in chef_data_explanatory:\n",
    "    print(f\"chef_data['{val}'] +\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Building a Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.427157\n",
      "         Iterations 7\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>Logit Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>   <td>chef_data['CROSS_SELL_SUCCESS']</td> <th>  No. Observations:  </th>   <td>  1946</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                        <td>Logit</td>              <th>  Df Residuals:      </th>   <td>  1935</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>                        <td>MLE</td>               <th>  Df Model:          </th>   <td>    10</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>                   <td>Fri, 20 Mar 2020</td>         <th>  Pseudo R-squ.:     </th>   <td>0.3195</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                       <td>11:42:38</td>             <th>  Log-Likelihood:    </th>  <td> -831.25</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>converged:</th>                    <td>True</td>               <th>  LL-Null:           </th>  <td> -1221.6</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>            <td>nonrobust</td>            <th>  LLR p-value:       </th> <td>2.898e-161</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "                      <td></td>                         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>                                 <td>   -5.5081</td> <td>    0.660</td> <td>   -8.346</td> <td> 0.000</td> <td>   -6.802</td> <td>   -4.215</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['MOBILE_NUMBER']</th>                <td>    0.7927</td> <td>    0.179</td> <td>    4.418</td> <td> 0.000</td> <td>    0.441</td> <td>    1.144</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['CANCELLATIONS_BEFORE_NOON']</th>    <td>    0.2561</td> <td>    0.044</td> <td>    5.823</td> <td> 0.000</td> <td>    0.170</td> <td>    0.342</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['CANCELLATIONS_AFTER_NOON']</th>     <td>   -0.3140</td> <td>    0.136</td> <td>   -2.302</td> <td> 0.021</td> <td>   -0.581</td> <td>   -0.047</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['TASTES_AND_PREFERENCES']</th>       <td>    0.4647</td> <td>    0.133</td> <td>    3.490</td> <td> 0.000</td> <td>    0.204</td> <td>    0.726</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['MOBILE_LOGINS']</th>                <td>    0.1998</td> <td>    0.104</td> <td>    1.915</td> <td> 0.056</td> <td>   -0.005</td> <td>    0.404</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['FOLLOWED_RECOMMENDATIONS_PCT']</th> <td>    0.0566</td> <td>    0.003</td> <td>   16.278</td> <td> 0.000</td> <td>    0.050</td> <td>    0.063</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['number_of_names']</th>              <td>    0.5922</td> <td>    0.090</td> <td>    6.575</td> <td> 0.000</td> <td>    0.416</td> <td>    0.769</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['business']</th>                     <td>    1.9437</td> <td>    0.170</td> <td>   11.422</td> <td> 0.000</td> <td>    1.610</td> <td>    2.277</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['private']</th>                      <td>    1.2666</td> <td>    0.155</td> <td>    8.166</td> <td> 0.000</td> <td>    0.963</td> <td>    1.571</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>chef_data['Refr_Locker']</th>                  <td>    0.5118</td> <td>    0.206</td> <td>    2.484</td> <td> 0.013</td> <td>    0.108</td> <td>    0.916</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                                  Logit Regression Results                                 \n",
       "===========================================================================================\n",
       "Dep. Variable:     chef_data['CROSS_SELL_SUCCESS']   No. Observations:                 1946\n",
       "Model:                                       Logit   Df Residuals:                     1935\n",
       "Method:                                        MLE   Df Model:                           10\n",
       "Date:                             Fri, 20 Mar 2020   Pseudo R-squ.:                  0.3195\n",
       "Time:                                     11:42:38   Log-Likelihood:                -831.25\n",
       "converged:                                    True   LL-Null:                       -1221.6\n",
       "Covariance Type:                         nonrobust   LLR p-value:                2.898e-161\n",
       "=============================================================================================================\n",
       "                                                coef    std err          z      P>|z|      [0.025      0.975]\n",
       "-------------------------------------------------------------------------------------------------------------\n",
       "Intercept                                    -5.5081      0.660     -8.346      0.000      -6.802      -4.215\n",
       "chef_data['MOBILE_NUMBER']                    0.7927      0.179      4.418      0.000       0.441       1.144\n",
       "chef_data['CANCELLATIONS_BEFORE_NOON']        0.2561      0.044      5.823      0.000       0.170       0.342\n",
       "chef_data['CANCELLATIONS_AFTER_NOON']        -0.3140      0.136     -2.302      0.021      -0.581      -0.047\n",
       "chef_data['TASTES_AND_PREFERENCES']           0.4647      0.133      3.490      0.000       0.204       0.726\n",
       "chef_data['MOBILE_LOGINS']                    0.1998      0.104      1.915      0.056      -0.005       0.404\n",
       "chef_data['FOLLOWED_RECOMMENDATIONS_PCT']     0.0566      0.003     16.278      0.000       0.050       0.063\n",
       "chef_data['number_of_names']                  0.5922      0.090      6.575      0.000       0.416       0.769\n",
       "chef_data['business']                         1.9437      0.170     11.422      0.000       1.610       2.277\n",
       "chef_data['private']                          1.2666      0.155      8.166      0.000       0.963       1.571\n",
       "chef_data['Refr_Locker']                      0.5118      0.206      2.484      0.013       0.108       0.916\n",
       "=============================================================================================================\n",
       "\"\"\""
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# building a full model\n",
    "# trying the model with every variable\n",
    "\n",
    "# blueprinting a model type\n",
    "lm_full = smf.logit(formula = \"\"\" chef_data['CROSS_SELL_SUCCESS'] ~ \n",
    "chef_data['MOBILE_NUMBER'] +\n",
    "chef_data['CANCELLATIONS_BEFORE_NOON'] +\n",
    "chef_data['CANCELLATIONS_AFTER_NOON'] +\n",
    "chef_data['TASTES_AND_PREFERENCES'] +\n",
    "chef_data['MOBILE_LOGINS'] +\n",
    "chef_data['FOLLOWED_RECOMMENDATIONS_PCT'] +\n",
    "chef_data['number_of_names'] +\n",
    "chef_data['business'] +\n",
    "chef_data['private'] +\n",
    "chef_data['Refr_Locker']\n",
    "\"\"\",\n",
    "                                data = chef_data)\n",
    "\n",
    "\n",
    "# telling Python to run the data through the blueprint\n",
    "results_full = lm_full.fit()\n",
    "\n",
    "\n",
    "# printing the results\n",
    "results_full.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "# explanatory sets from last session\n",
    "\n",
    "# creating a dictionary to store candidate models\n",
    "\n",
    "chef_data_dict = {\n",
    "\n",
    " # full model\n",
    " 'logit_full'   : ['REVENUE', 'CROSS_SELL_SUCCESS', 'TOTAL_MEALS_ORDERED', \n",
    "                   'UNIQUE_MEALS_PURCH', 'CONTACTS_W_CUSTOMER_SERVICE', \n",
    "                   'PRODUCT_CATEGORIES_VIEWED', 'AVG_TIME_PER_SITE_VISIT', \n",
    "                   'MOBILE_NUMBER', 'CANCELLATIONS_BEFORE_NOON', \n",
    "                   'CANCELLATIONS_AFTER_NOON', 'TASTES_AND_PREFERENCES', \n",
    "                   'PC_LOGINS', 'MOBILE_LOGINS', 'WEEKLY_PLAN', \n",
    "                   'EARLY_DELIVERIES', 'LATE_DELIVERIES', \n",
    "                   'FOLLOWED_RECOMMENDATIONS_PCT', 'AVG_PREP_VID_TIME', \n",
    "                   'LARGEST_ORDER_SIZE', 'MASTER_CLASSES_ATTENDED', \n",
    "                   'AVG_CLICKS_PER_VISIT', 'TOTAL_PHOTOS_VIEWED', \n",
    "                   'number_of_names', 'out_total_meals', 'out_unique_meals', \n",
    "                   'out_cust_service', 'out_avg_time_prep_vid', \n",
    "                   'out_cancel_before', 'out_cancel_after', \n",
    "                   'out_early_deliveries', 'out_late_deliveries', \n",
    "                   'out_site_visit_time', 'out_avg_clicks_visit', \n",
    "                   'out_total_photos', 'out_pc_logins', 'out_mobile_logins', \n",
    "                   'out_largest_order', 'out_masterclass', 'out_revenue', \n",
    "                   'change_followed_pct', 'business', 'private', 'Locker', \n",
    "                   'Refr_Locker', 'Median Rating 1', 'Median Rating 2', \n",
    "                   'Median Rating 3','Median Rating 4', 'Median Rating 5', \n",
    "                   'Botley', 'Florent', 'Frey', 'Greyjoy', 'Hightower', \n",
    "                   'Lannister', 'Rivers', 'Royce', 'Stark', 'Targaryen', \n",
    "                   'Tyrell', 'Vance'],\n",
    " \n",
    " # significant variables only\n",
    " 'logit_sig'    : ['MOBILE_NUMBER','CANCELLATIONS_BEFORE_NOON',\n",
    "                   'CANCELLATIONS_AFTER_NOON','TASTES_AND_PREFERENCES',\n",
    "                   'MOBILE_LOGINS','FOLLOWED_RECOMMENDATIONS_PCT',\n",
    "                   'number_of_names','business','private','Refr_Locker']\n",
    "\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "/--------------------------\\\n",
      "|Explanatory Variable Sets |\n",
      "\\--------------------------/\n",
      "\n",
      "Full Model:\n",
      "-----------\n",
      "['REVENUE', 'CROSS_SELL_SUCCESS', 'TOTAL_MEALS_ORDERED', 'UNIQUE_MEALS_PURCH', 'CONTACTS_W_CUSTOMER_SERVICE', 'PRODUCT_CATEGORIES_VIEWED', 'AVG_TIME_PER_SITE_VISIT', 'MOBILE_NUMBER', 'CANCELLATIONS_BEFORE_NOON', 'CANCELLATIONS_AFTER_NOON', 'TASTES_AND_PREFERENCES', 'PC_LOGINS', 'MOBILE_LOGINS', 'WEEKLY_PLAN', 'EARLY_DELIVERIES', 'LATE_DELIVERIES', 'FOLLOWED_RECOMMENDATIONS_PCT', 'AVG_PREP_VID_TIME', 'LARGEST_ORDER_SIZE', 'MASTER_CLASSES_ATTENDED', 'AVG_CLICKS_PER_VISIT', 'TOTAL_PHOTOS_VIEWED', 'number_of_names', 'out_total_meals', 'out_unique_meals', 'out_cust_service', 'out_avg_time_prep_vid', 'out_cancel_before', 'out_cancel_after', 'out_early_deliveries', 'out_late_deliveries', 'out_site_visit_time', 'out_avg_clicks_visit', 'out_total_photos', 'out_pc_logins', 'out_mobile_logins', 'out_largest_order', 'out_masterclass', 'out_revenue', 'change_followed_pct', 'business', 'private', 'Locker', 'Refr_Locker', 'Median Rating 1', 'Median Rating 2', 'Median Rating 3', 'Median Rating 4', 'Median Rating 5', 'Botley', 'Florent', 'Frey', 'Greyjoy', 'Hightower', 'Lannister', 'Rivers', 'Royce', 'Stark', 'Targaryen', 'Tyrell', 'Vance']\n",
      "\n",
      "\n",
      "Significant p-value Model:\n",
      "--------------------------\n",
      "['MOBILE_NUMBER', 'CANCELLATIONS_BEFORE_NOON', 'CANCELLATIONS_AFTER_NOON', 'TASTES_AND_PREFERENCES', 'MOBILE_LOGINS', 'FOLLOWED_RECOMMENDATIONS_PCT', 'number_of_names', 'business', 'private', 'Refr_Locker']\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# printing variable sets\n",
    "print(f\"\"\"\n",
    "/--------------------------\\\\\n",
    "|Explanatory Variable Sets |\n",
    "\\\\--------------------------/\n",
    "\n",
    "Full Model:\n",
    "-----------\n",
    "{chef_data_dict['logit_full']}\n",
    "\n",
    "\n",
    "Significant p-value Model:\n",
    "--------------------------\n",
    "{chef_data_dict['logit_sig']}\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1459, 10)\n",
      "(1459,)\n",
      "(487, 10)\n",
      "(487,)\n"
     ]
    }
   ],
   "source": [
    "# train/test split with the significant values model\n",
    "chef_data_data   =  chef_data.loc[ : , chef_data_dict[\"logit_sig\"]]\n",
    "chef_data_target =  chef_data.loc[ : , \"CROSS_SELL_SUCCESS\"]\n",
    "\n",
    "# preparing training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "            chef_data_data,\n",
    "            chef_data_target,\n",
    "            test_size = 0.25,\n",
    "            random_state = 222)\n",
    "\n",
    "\n",
    "# Training set \n",
    "print(X_train.shape)\n",
    "print(y_train.shape)\n",
    "\n",
    "# Testing set\n",
    "print(X_test.shape)\n",
    "print(y_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training ACCURACY: 0.7862\n",
      "Testing  ACCURACY: 0.7618\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\ferna\\Anaconda3\\lib\\site-packages\\sklearn\\linear_model\\logistic.py:947: ConvergenceWarning: lbfgs failed to converge. Increase the number of iterations.\n",
      "  \"of iterations.\", ConvergenceWarning)\n"
     ]
    }
   ],
   "source": [
    "# Running a logistic regression\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "            chef_data_data,\n",
    "            chef_data_target,\n",
    "            test_size    = 0.25,\n",
    "            random_state = 222,\n",
    "            stratify     = chef_data_target)\n",
    "\n",
    "\n",
    "# INSTANTIATING a logistic regression model\n",
    "logreg = LogisticRegression(solver = 'lbfgs',\n",
    "                            C = 1,\n",
    "                            random_state = 222)\n",
    "\n",
    "\n",
    "# FITTING the training data\n",
    "logreg_fit = logreg.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# PREDICTING based on the testing set\n",
    "logreg_pred = logreg_fit.predict(X_test)\n",
    "\n",
    "\n",
    "# SCORING the results\n",
    "print('Training ACCURACY:', logreg_fit.score(X_train, y_train).round(4))\n",
    "print('Testing  ACCURACY:', logreg_fit.score(X_test, y_test).round(4))\n",
    "\n",
    "dual=False"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7281838252382059"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# area under the roc curve (auc)\n",
    "roc_auc_score(y_true  = y_test,\n",
    "              y_score = logreg_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Model', 'Training Accuracy', 'Testing Accuracy', 'AUC Value']\n",
      "['Logistic Regression', 0.7862, 0.7618, 0.7282]\n"
     ]
    }
   ],
   "source": [
    "# creating an empty list\n",
    "model_performance = [['Model', 'Training Accuracy',\n",
    "                      'Testing Accuracy', 'AUC Value']]\n",
    "\n",
    "\n",
    "# train accuracy\n",
    "logreg_train_acc  = logreg_fit.score(X_train, y_train).round(4)\n",
    "\n",
    "\n",
    "# test accuracy\n",
    "logreg_test_acc   = logreg_fit.score(X_test, y_test).round(4)\n",
    "\n",
    "\n",
    "# auc value\n",
    "logreg_auc = roc_auc_score(y_true  = y_test,\n",
    "                           y_score = logreg_pred).round(4)\n",
    "\n",
    "\n",
    "# saving the results\n",
    "model_performance.append(['Logistic Regression',\n",
    "                          logreg_train_acc,\n",
    "                          logreg_test_acc,\n",
    "                          logreg_auc])\n",
    "\n",
    "\n",
    "# checking the results\n",
    "for model in model_performance:\n",
    "    print(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The optimal number of neighbors is: 13\n"
     ]
    }
   ],
   "source": [
    "# Function to determine optimal neighbors\n",
    "def optimal_neighbors(X_data,\n",
    "                      y_data,\n",
    "                      standardize = True,\n",
    "                      pct_test=0.25,\n",
    "                      seed=222,\n",
    "                      response_type='reg',\n",
    "                      max_neighbors=20,\n",
    "                      show_viz=True):\n",
    "    \"\"\"\n",
    "Exhaustively compute training and testing results for KNN across\n",
    "[1, max_neighbors]. Outputs the maximum test score and (by default) a\n",
    "visualization of the results.\n",
    "PARAMETERS\n",
    "----------\n",
    "X_data        : explanatory variable data\n",
    "y_data        : response variable\n",
    "standardize   : whether or not to standardize the X data, default True\n",
    "pct_test      : test size for training and validation from (0,1), default 0.25\n",
    "seed          : random seed to be used in algorithm, default 802\n",
    "response_type : type of neighbors algorithm to use, default 'reg'\n",
    "    Use 'reg' for regression (KNeighborsRegressor)\n",
    "    Use 'class' for classification (KNeighborsClassifier)\n",
    "max_neighbors : maximum number of neighbors in exhaustive search, default 20\n",
    "show_viz      : display or surpress k-neigbors visualization, default True\n",
    "\"\"\"    \n",
    "    \n",
    "    \n",
    "    if standardize == True:\n",
    "        # optionally standardizing X_data\n",
    "        scaler             = StandardScaler()\n",
    "        scaler.fit(X_data)\n",
    "        X_scaled           = scaler.transform(X_data)\n",
    "        X_scaled_df        = pd.DataFrame(X_scaled)\n",
    "        X_data             = X_scaled_df\n",
    "\n",
    "\n",
    "\n",
    "    # train-test split\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X_data,\n",
    "                                                        y_data,\n",
    "                                                        test_size = pct_test,\n",
    "                                                        random_state = seed)\n",
    "\n",
    "\n",
    "    # creating lists for training set accuracy and test set accuracy\n",
    "    training_accuracy = []\n",
    "    test_accuracy = []\n",
    "    \n",
    "    \n",
    "    # setting neighbor range\n",
    "    neighbors_settings = range(1, max_neighbors + 1)\n",
    "\n",
    "\n",
    "    for n_neighbors in neighbors_settings:\n",
    "        # building the model based on response variable type\n",
    "        if response_type == 'reg':\n",
    "            clf = KNeighborsRegressor(n_neighbors = n_neighbors)\n",
    "            clf.fit(X_train, y_train)\n",
    "            \n",
    "        elif response_type == 'class':\n",
    "            clf = KNeighborsClassifier(n_neighbors = n_neighbors)\n",
    "            clf.fit(X_train, y_train)            \n",
    "            \n",
    "        else:\n",
    "            print(\"Error: response_type must be 'reg' or 'class'\")\n",
    "        \n",
    "        \n",
    "        # recording the training set accuracy\n",
    "        training_accuracy.append(clf.score(X_train, y_train))\n",
    "    \n",
    "        # recording the generalization accuracy\n",
    "        test_accuracy.append(clf.score(X_test, y_test))\n",
    "\n",
    "\n",
    "    # optionally displaying visualization\n",
    "    if show_viz == True:\n",
    "        # plotting the visualization\n",
    "        fig, ax = plt.subplots(figsize=(12,8))\n",
    "        plt.plot(neighbors_settings, training_accuracy, label = \"training accuracy\")\n",
    "        plt.plot(neighbors_settings, test_accuracy, label = \"test accuracy\")\n",
    "        plt.ylabel(\"Accuracy\")\n",
    "        plt.xlabel(\"n_neighbors\")\n",
    "        plt.legend()\n",
    "        plt.show()\n",
    "    \n",
    "    \n",
    "    # returning optimal number of neighbors\n",
    "    print(f\"The optimal number of neighbors is: {test_accuracy.index(max(test_accuracy))+1}\")\n",
    "    return test_accuracy.index(max(test_accuracy))+1\n",
    "\n",
    "# determining the optimal number of neighbors\n",
    "opt_neighbors = optimal_neighbors(X_data = chef_data_data,\n",
    "                                  y_data = chef_data_target,\n",
    "                                  response_type= 'class')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## <i> Scikit-learn </i>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training ACCURACY: 0.8101\n",
      "Testing  ACCURACY: 0.77\n",
      "AUC Score        : 0.7088\n"
     ]
    }
   ],
   "source": [
    "# INSTANTIATING StandardScaler()\n",
    "scaler = StandardScaler()\n",
    "\n",
    "\n",
    "# FITTING the data\n",
    "scaler.fit(chef_data_data)\n",
    "\n",
    "\n",
    "# TRANSFORMING the data\n",
    "X_scaled     = scaler.transform(chef_data_data)\n",
    "\n",
    "\n",
    "# converting to a DataFrame\n",
    "X_scaled_chef_data  = pd.DataFrame(X_scaled) \n",
    "\n",
    "\n",
    "# train-test split with the scaled data\n",
    "X_train_scaled, X_test_scaled, y_train_scaled, y_test_scaled = train_test_split(\n",
    "            X_scaled_chef_data,\n",
    "            chef_data_target,\n",
    "            random_state = 222,\n",
    "            test_size = 0.25,\n",
    "            stratify = chef_data_target)\n",
    "\n",
    "\n",
    "# INSTANTIATING a KNN classification model with optimal neighbors\n",
    "knn_opt = KNeighborsClassifier(n_neighbors = opt_neighbors)\n",
    "\n",
    "\n",
    "# FITTING the training data\n",
    "knn_fit = knn_opt.fit(X_train_scaled, y_train_scaled)\n",
    "\n",
    "\n",
    "# PREDICTING based on the testing set\n",
    "knn_pred = knn_fit.predict(X_test_scaled)\n",
    "\n",
    "\n",
    "# SCORING the results\n",
    "print('Training ACCURACY:', knn_fit.score(X_train_scaled, y_train_scaled).round(4))\n",
    "print('Testing  ACCURACY:', knn_fit.score(X_test_scaled, y_test_scaled).round(4))\n",
    "print('AUC Score        :', roc_auc_score(y_true  = y_test,\n",
    "                                          y_score = knn_pred).round(4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Model', 'Training Accuracy', 'Testing Accuracy', 'AUC Value']\n",
      "['Logistic Regression', 0.7862, 0.7618, 0.7282]\n",
      "['KNN Classification (Standardized)', 0.8101, 0.77, 0.7088]\n"
     ]
    }
   ],
   "source": [
    "# train accuracy\n",
    "knn_train_acc = knn_fit.score(X_train_scaled, y_train_scaled).round(4)\n",
    "\n",
    "\n",
    "# test accuracy\n",
    "knn_test_acc  = knn_fit.score(X_test_scaled, y_test_scaled).round(4)\n",
    "\n",
    "\n",
    "# auc value\n",
    "knn_auc       = roc_auc_score(y_true  = y_test_scaled,\n",
    "                              y_score = knn_pred).round(4)\n",
    "\n",
    "\n",
    "# saving the results\n",
    "model_performance.append(['KNN Classification (Standardized)',\n",
    "                          knn_train_acc,\n",
    "                          knn_test_acc,\n",
    "                          knn_auc])\n",
    "\n",
    "\n",
    "# checking the results\n",
    "for model in model_performance:\n",
    "    print(model)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "def display_tree(tree, feature_df, height = 500, width = 800):\n",
    "    \"\"\"\n",
    "    PARAMETERS\n",
    "    ----------\n",
    "    tree       : fitted tree model object\n",
    "        fitted CART model to visualized\n",
    "    feature_df : DataFrame\n",
    "        DataFrame of explanatory features (used to generate labels)\n",
    "    height     : int, default 500\n",
    "        height in pixels to which to constrain image in html\n",
    "    width      : int, default 800\n",
    "        width in pixels to which to constrain image in html\n",
    "    \"\"\"\n",
    "\n",
    "    # visualizing the tree\n",
    "    dot_data = StringIO()\n",
    "\n",
    "    \n",
    "    # exporting tree to graphviz\n",
    "    export_graphviz(decision_tree      = tree,\n",
    "                    out_file           = dot_data,\n",
    "                    filled             = True,\n",
    "                    rounded            = True,\n",
    "                    special_characters = True,\n",
    "                    feature_names      = feature_df.columns)\n",
    "\n",
    "\n",
    "    # declaring a graph object\n",
    "    graph = pydotplus.graph_from_dot_data(dot_data.getvalue())\n",
    "\n",
    "\n",
    "    # creating image\n",
    "    img = Image(graph.create_png(),\n",
    "                height = height,\n",
    "                width  = width)\n",
    "    \n",
    "    return img\n",
    "\n",
    "########################################\n",
    "# plot_feature_importances\n",
    "########################################\n",
    "def plot_feature_importances(model, train, export = False):\n",
    "    \"\"\"\n",
    "    Plots the importance of features from a CART model.\n",
    "    \n",
    "    PARAMETERS\n",
    "    ----------\n",
    "    model  : CART model\n",
    "    train  : explanatory variable training data\n",
    "    export : whether or not to export as a .png image, default False\n",
    "    \"\"\"\n",
    "    \n",
    "    # declaring the number\n",
    "    n_features = X_train.shape[1]\n",
    "    \n",
    "    # setting plot window\n",
    "    fig, ax = plt.subplots(figsize=(12,9))\n",
    "    \n",
    "    plt.barh(range(n_features), model.feature_importances_, align='center')\n",
    "    plt.yticks(pd.np.arange(n_features), train.columns)\n",
    "    plt.xlabel(\"Feature importance\")\n",
    "    plt.ylabel(\"Feature\")\n",
    "    \n",
    "    if export == True:\n",
    "        plt.savefig('Tree_Leaf_50_Feature_Importance.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training ACCURACY: 0.926\n",
      "Testing  ACCURACY: 0.7844\n",
      "AUC Score        : 0.7617\n"
     ]
    }
   ],
   "source": [
    "# INSTANTIATING a classification tree object\n",
    "full_tree = DecisionTreeClassifier()\n",
    "\n",
    "\n",
    "# FITTING the training data\n",
    "full_tree_fit = full_tree.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# PREDICTING on new data\n",
    "full_tree_pred = full_tree_fit.predict(X_test)\n",
    "\n",
    "\n",
    "# SCORING the model\n",
    "print('Training ACCURACY:', full_tree_fit.score(X_train, y_train).round(4))\n",
    "print('Testing  ACCURACY:', full_tree_fit.score(X_test, y_test).round(4))\n",
    "print('AUC Score        :', roc_auc_score(y_true  = y_test,\n",
    "                                          y_score = full_tree_pred).round(4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Model', 'Training Accuracy', 'Testing Accuracy', 'AUC Value']\n",
      "['Logistic Regression', 0.7862, 0.7618, 0.7282]\n",
      "['KNN Classification (Standardized)', 0.8101, 0.77, 0.7088]\n",
      "['Full Tree', 0.926, 0.7844, 0.7617]\n"
     ]
    }
   ],
   "source": [
    "# train accuracy\n",
    "full_tree_train_acc = full_tree_fit.score(X_train, y_train).round(4)\n",
    "\n",
    "\n",
    "# test accuracy\n",
    "full_tree_test_acc  = full_tree_fit.score(X_test, y_test).round(4)\n",
    "\n",
    "\n",
    "# auc value\n",
    "full_tree_auc       = roc_auc_score(y_true  = y_test,\n",
    "                                    y_score = full_tree_pred).round(4)\n",
    "\n",
    "\n",
    "# saving the results\n",
    "model_performance.append(['Full Tree',\n",
    "                          full_tree_train_acc,\n",
    "                          full_tree_test_acc,\n",
    "                          full_tree_auc])\n",
    "\n",
    "\n",
    "# checking the results\n",
    "for model in model_performance:\n",
    "    print(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting package metadata (current_repodata.json): ...working... done\n",
      "Solving environment: ...working... done\n",
      "\n",
      "# All requested packages already installed.\n",
      "\n",
      "\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "conda install python-graphviz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training ACCURACY: 0.7841\n",
      "Testing  ACCURACY: 0.7762\n",
      "AUC Score        : 0.8032\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 38,
     "metadata": {
      "image/png": {
       "height": 500,
       "width": 800
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# INSTANTIATING a classification tree object\n",
    "tree_pruned      = DecisionTreeClassifier(max_depth = 3,\n",
    "                                          min_samples_leaf = 25,\n",
    "                                          random_state = 222)\n",
    "\n",
    "\n",
    "# FITTING the training data\n",
    "tree_pruned_fit  = tree_pruned.fit(X_train, y_train)\n",
    "\n",
    "\n",
    "# PREDICTING on new data\n",
    "tree_pred = tree_pruned_fit.predict(X_test)\n",
    "\n",
    "\n",
    "# SCORING the model\n",
    "print('Training ACCURACY:', tree_pruned_fit.score(X_train, y_train).round(4))\n",
    "print('Testing  ACCURACY:', tree_pruned_fit.score(X_test, y_test).round(4))\n",
    "print('AUC Score        :', roc_auc_score(y_true  = y_test,\n",
    "                                          y_score = tree_pred).round(4))\n",
    "\n",
    "\n",
    "# calling display_tree\n",
    "display_tree(tree       = tree_pruned_fit,\n",
    "             feature_df = X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x648 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plotting feature importance\n",
    "plot_feature_importances(tree_pruned_fit,\n",
    "                         train = X_train,\n",
    "                         export = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>Training Accuracy</th>\n",
       "      <th>Testing Accuracy</th>\n",
       "      <th>AUC Value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Logistic Regression</td>\n",
       "      <td>0.7862</td>\n",
       "      <td>0.7618</td>\n",
       "      <td>0.7282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>KNN Classification (Standardized)</td>\n",
       "      <td>0.8101</td>\n",
       "      <td>0.7700</td>\n",
       "      <td>0.7088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Full Tree</td>\n",
       "      <td>0.9260</td>\n",
       "      <td>0.7844</td>\n",
       "      <td>0.7617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Pruned Tree</td>\n",
       "      <td>0.7841</td>\n",
       "      <td>0.7762</td>\n",
       "      <td>0.8032</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               Model  Training Accuracy  Testing Accuracy  AUC Value\n",
       "0                Logistic Regression             0.7862            0.7618     0.7282\n",
       "1  KNN Classification (Standardized)             0.8101            0.7700     0.7088\n",
       "2                          Full Tree             0.9260            0.7844     0.7617\n",
       "3                        Pruned Tree             0.7841            0.7762     0.8032"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# train accuracy\n",
    "p_tree_train_acc = tree_pruned_fit.score(X_train, y_train).round(4)\n",
    "\n",
    "\n",
    "# test accuracy\n",
    "p_tree_test_acc  = tree_pruned_fit.score(X_test, y_test).round(4)\n",
    "\n",
    "\n",
    "# auc value\n",
    "p_tree_auc       = roc_auc_score(y_true  = y_test,\n",
    "                                 y_score = tree_pred).round(4)\n",
    "\n",
    "\n",
    "# saving the results\n",
    "model_performance.append(['Pruned Tree',\n",
    "                          p_tree_train_acc,\n",
    "                          p_tree_test_acc,\n",
    "                          p_tree_auc])\n",
    "\n",
    "\n",
    "# converting to DataFrame and checking the results\n",
    "pd.DataFrame(model_performance[1:], columns = model_performance[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def visual_cm(true_y, pred_y, labels = None):\n",
    "    \"\"\"\n",
    "Creates a visualization of a confusion matrix.\n",
    "\n",
    "PARAMETERS\n",
    "----------\n",
    "true_y : true values for the response variable\n",
    "pred_y : predicted values for the response variable\n",
    "labels : , default None\n",
    "    \"\"\"\n",
    "    # visualizing the confusion matrix\n",
    "\n",
    "    # setting labels\n",
    "    lbls = labels\n",
    "    \n",
    "\n",
    "    # declaring a confusion matrix object\n",
    "    cm = confusion_matrix(y_true = true_y,\n",
    "                          y_pred = pred_y)\n",
    "\n",
    "\n",
    "    # heatmap\n",
    "    sns.heatmap(cm,\n",
    "                annot       = True,\n",
    "                xticklabels = lbls,\n",
    "                yticklabels = lbls,\n",
    "                cmap        = 'Blues',\n",
    "                fmt         = 'g')\n",
    "\n",
    "\n",
    "    plt.xlabel('Predicted')\n",
    "    plt.ylabel('Actual')\n",
    "    plt.title('Confusion Matrix of the Classifier')\n",
    "    plt.show()\n",
    "    \n",
    "visual_cm(true_y = y_test,\n",
    "          pred_y = logreg_pred,\n",
    "          labels = ['Cro-Sell Success', 'Cro-Sell Failure'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Conclusion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Business Insight number 1\n",
    "Analyzing which domain, the customers have used to sign up through, gave the following insights. Professional (business) domains have the highest mean cross-selling function success. Because of this, it is expected that some of the advertising will be done through emails. Leisure (private) had the second mean cross-selling function followed by trash as the lowest. Thus, the trash emails are rarely open to cross-selling. On the other hand, the majority of professional emails are successfully cross sold to.\n",
    "\n",
    "\n",
    "Business Insight number 2\n",
    "The percentage of how much customers followed the recommendations is the variable that has the highest correlation with the success of cross-selling.\n",
    "However, following the recommendations was not a common theme. Nearly 60 percent of the customers followed less than or equal to 30 percent of the recommendations. Eight percent of which did never use the recommendation service.\n",
    "Nevertheless, customers that did do follow recommendations are very likely for cross-selling. If a customer followed more than 30 percent of recommendations, they all (100%) were successful for cross-selling.\n",
    "\n",
    "Recommendation\n",
    "The clearest indicator for successful cross-selling was the percentage of recommendations followed. As previously mentioned, from the customers that followed more than 30 percent of recommendations 100 percent were successful for cross-selling. Thus, this is our biggest indicator for growth opportunity and therefore we should implement more recommendations and interactive features to help our customers and increase cross-selling. This could be increased by for instance marketing through social media, pop-ups, chat robots etc. that will help increase these interactive features and finally increase the cross-selling success.\n",
    "\n",
    "Secondly, since there is a increased success of cross-selling through professional domains. We should focus our marketing efforts on more business-related social media platforms such as LinkedIn. Furthermore, we should encourage our customers to sign up with several emails, since most people today have two email domains (The Radicati Group, 2015). This could motivate customers to not only sign up with their personal or trash email, but also a higher value email such as their professional domains. Which in its turn would increase the successful cross-selling."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
